


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000                 EXPORT           __main
    9 00000000         
   10 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   11 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   12 00000000         
   13 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   14 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver le
                                                             moteur droit
   15 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   16 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   17 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   18 00000000         
   19 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   20 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver l
                                                            e moteur gauche
   21 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   22 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   23 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   24 00000000                 IMPORT           Reset_Handlerone
   25 00000000                 IMPORT           DISTANCE
   26 00000000         
   27 00000000 400FE108 
                       SYSCTL_PERIPH_GPIO
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   28 00000000         
   29 00000000         ; The GPIODATA register is the data register
   30 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)



ARM Macro Assembler    Page 2 


   31 00000000         
   32 00000000 E000E010 
                       SYS_TICK_BASE
                               EQU              0xE000E010
   33 00000000 E000E020 
                       STCTRL  EQU              SYS_TICK_BASE + 0x010
   34 00000000 E000E024 
                       STRELOAD
                               EQU              SYS_TICK_BASE + 0x014
   35 00000000 E000E028 
                       STCURRENT
                               EQU              SYS_TICK_BASE + 0x018
   36 00000000         
   37 00000000 00000000 
                       OFF_LED EQU              0x00
   38 00000000         
   39 00000000         ; The GPIODATA register is the data register
   40 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   41 00000000         
   42 00000000         ; The GPIODATA register is the data register
   43 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4000.4000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   44 00000000         
   45 00000000         ; configure the corresponding pin to be an output
   46 00000000         ; all GPIO pins are inputs by default
   47 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   48 00000000         
   49 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   50 00000000         ; By default, all GPIO pins have 2-mA drive.
   51 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   52 00000000         
   53 00000000         ; Digital enable register
   54 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   55 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   56 00000000         



ARM Macro Assembler    Page 3 


   57 00000000         ; Pul_up
   58 00000000 00000510 
                       GPIO_I_PUR
                               EQU              0x00000510  ; GPIO Pull-Up (p43
                                                            2 datasheet de lm3s
                                                            9B92.pdf)
   59 00000000         
   60 00000000         ; Broches select
   61 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   62 00000000         
   63 00000000 00000003 
                       BROCHE0_1
                               EQU              0x03        ; Bumper1 & Bumper2
                                                             sur broche 0 et 1
   64 00000000         
   65 00000000 000000C0 
                       BROCHE6_7
                               EQU              0xC0        ; bouton poussoir 1
                                                             & bouton poussoir 
                                                            2 sur broche 6 et 7
                                                            
   66 00000000         
   67 00000000 015FFFFF 
                       DUREE_TOURNE
                               EQU              0x015FFFFF  ; Duree pour tourné
                                                            e
   68 00000000         
   69 00000000 0001FFFF 
                       DUREE_OFF
                               EQU              0x1FFFF
   70 00000000         
   71 00000000         ; blinking frequency
   72 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   73 00000000         
   74 00000000         __main
   75 00000000         ; ;; Enable the Port F & D peripheral clock   (p291 data
                       sheet de lm3s9B96.pdf)
   76 00000000         ; ;;         
   77 00000000 4E5B            ldr              r6, = SYSCTL_PERIPH_GPIO 
                                                            ;; RCGC2
   78 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO D, E et F
                                                             où sont branchés l
                                                            es leds (0x28 == 0b
                                                            111000)
   79 00000006         ; ;;                              (GPIO::FEDCBA)
   80 00000006 6030            str              r0, [r6]
   81 00000008         
   82 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   83 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   84 0000000A BF00            nop
   85 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug



ARM Macro Assembler    Page 4 


                                                             step by step...
   86 0000000E         
   87 0000000E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION LED
   88 0000000E         
   89 0000000E 4E59            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R 
                                                            ;; 1 Pin du portF e
                                                            n sortie (broche 4 
                                                            : 00010000)
   90 00000010 F04F 0030       ldr              r0, = BROCHE4_5
   91 00000014 6030            str              r0, [r6]
   92 00000016         
   93 00000016 4E58            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
   94 00000018 F04F 0030       ldr              r0, = BROCHE4_5
   95 0000001C 6030            str              r0, [r6]
   96 0000001E         
   97 0000001E 4E57            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R 
                                                            ;; Choix de l'inten
                                                            sité de sortie (2mA
                                                            )
   98 00000020 F04F 0030       ldr              r0, = BROCHE4_5
   99 00000024 6030            str              r0, [r6]
  100 00000026         
  101 00000026 F04F 0200       mov              r2, #0x000  ;; pour eteindre LE
                                                            D
  102 0000002A         
  103 0000002A         ; allumer la led broche 4 (BROCHE4_5)
  104 0000002A F04F 0330       mov              r3, #BROCHE4_5 ;; Allume LED1&2
                                                             portF broche 4&5 :
                                                             00110000
  105 0000002E         
  106 0000002E 4F54            ldr              r7, = GPIO_PORTF_BASE + (BROCHE
4_5<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> LED1
  107 00000030         
  108 00000030 603B            str              r3, [r7]
  109 00000032         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration LED 
  110 00000032         
  111 00000032         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Switcher 1
  112 00000032         
  113 00000032         
  114 00000032 F8DF 8150       ldr              r8, = GPIO_PORTD_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  115 00000036 F04F 00C0       ldr              r0, = BROCHE6_7
  116 0000003A F8C8 0000       str              r0, [r8]
  117 0000003E         
  118 0000003E F8DF 8148       ldr              r8, = GPIO_PORTD_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  119 00000042 F04F 00C0       ldr              r0, = BROCHE6_7
  120 00000046 F8C8 0000       str              r0, [r8]



ARM Macro Assembler    Page 5 


  121 0000004A         
  122 0000004A F8DF 8140       ldr              r8, = GPIO_PORTD_BASE + (BROCHE
6_7<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Switcher
  123 0000004E         
  124 0000004E         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Switcher 
  125 0000004E         
  126 0000004E         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION Bumper
  127 0000004E         
  128 0000004E F8DF 9140       ldr              r9, = GPIO_PORTE_BASE+GPIO_I_PU
R 
                                                            ;; Pul_up 
  129 00000052 F04F 0003       ldr              r0, = BROCHE0_1
  130 00000056 F8C9 0000       str              r0, [r9]
  131 0000005A         
  132 0000005A F8DF 9138       ldr              r9, = GPIO_PORTE_BASE+GPIO_O_DE
N 
                                                            ;; Enable Digital F
                                                            unction 
  133 0000005E F04F 0003       ldr              r0, = BROCHE0_1
  134 00000062 F8C9 0000       str              r0, [r9]
  135 00000066         
  136 00000066 F8DF 9130       ldr              r9, = GPIO_PORTE_BASE + (BROCHE
0_1<<2) 
                                                            ;; @data Register =
                                                             @base + (mask<<2) 
                                                            ==> Bumper  
  137 0000006A         
  138 0000006A         
  139 0000006A         ;vvvvvvvvvvvvvvvvvvvvvvvFin configuration Bumper
  140 0000006A         ;  BL Reset_Handlerone 
  141 0000006A         ReadState
  142 0000006A         
  143 0000006A F8D8 A000       ldr              r10,[r8]
  144 0000006E F1BA 0F40       CMP              r10,#0x40
  145 00000072 D1FA            BNE              ReadState
  146 00000074         
  147 00000074         ; Configure les PWM + GPIO
  148 00000074 F7FF FFFE       BL               MOTEUR_INIT
  149 00000078         
  150 00000078         ; Activer les deux moteurs droit et gauche
  151 00000078 F7FF FFFE       BL               MOTEUR_DROIT_ON
  152 0000007C F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  153 00000080 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  154 00000084 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  155 00000088 4944            ldr              r1, = DUREE_OFF ;; pour la dure
                                                            e de la boucle d'at
                                                            tente1 (duree)
  156 0000008A         
  157 0000008A         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  158 0000008A         loop
  159 0000008A         ; Evalbot avance droit devant
  160 0000008A 603A            str              r2, [r7]    ;; Eteint LED car r
                                                            2 = 0x00      
  161 0000008C F8D8 A000       ldr              r10,[r8]
  162 00000090 F1BA 0F80       CMP              r10,#0x80



ARM Macro Assembler    Page 6 


  163 00000094 D024            BEQ              OFF_MOTOR
  164 00000096 F8D9 A000       ldr              r10,[r9]
  165 0000009A F1BA 0F02       CMP              r10,#0x02
  166 0000009E D02F            BEQ              GAUCHE
  167 000000A0 F1BA 0F01       CMP              r10,#0x01
  168 000000A4 D047            BEQ              DROITE
  169 000000A6 E7F0            B                loop
  170 000000A8         end_
  171 000000A8 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  172 000000AC F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  173 000000B0 603A            str              r2, [r7]    ;; Eteint LED car r
                                                            2 = 0x00      
  174 000000B2 493B            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  175 000000B4 F8D8 A000       ldr              r10,[r8]
  176 000000B8 F1BA 0F40       CMP              r10,#0x40
  177 000000BC D017            BEQ              ON_MOTOR
  178 000000BE         
  179 000000BE         wait10
  180 000000BE F8D8 A000       ldr              r10,[r8]
  181 000000C2 F1BA 0F40       CMP              r10,#0x40
  182 000000C6 D012            BEQ              ON_MOTOR
  183 000000C8 3901            subs             r1, #1
  184 000000CA D1F8            bne              wait10
  185 000000CC 603B            str              r3, [r7]    ;; Allume LED1&2 po
                                                            rtF broche 4&5 : 00
                                                            110000 (contenu de 
                                                            r3)
  186 000000CE 4934            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  187 000000D0         
  188 000000D0         wait2
  189 000000D0 F8D8 A000       ldr              r10,[r8]
  190 000000D4 F1BA 0F40       CMP              r10,#0x40
  191 000000D8 D009            BEQ              ON_MOTOR
  192 000000DA 3901            subs             r1, #1
  193 000000DC D1F8            bne              wait2
  194 000000DE E7E3            b                end_
  195 000000E0         
  196 000000E0         OFF_MOTOR
  197 000000E0 F7FF FFFE       BL               MOTEUR_DROIT_OFF
  198 000000E4 F7FF FFFE       BL               MOTEUR_GAUCHE_OFF
  199 000000E8 F7FF FFFE       BL               DISTANCE
  200 000000EC E7DC            b                end_
  201 000000EE         
  202 000000EE         ON_MOTOR
  203 000000EE F7FF FFFE       BL               MOTEUR_DROIT_ON
  204 000000F2 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  205 000000F6 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  206 000000FA F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  207 000000FE E7C4            b                loop
  208 00000100         
  209 00000100         GAUCHE
  210 00000100 F8D9 A000       ldr              r10,[r9]
  211 00000104 F1BA 0F00       CMP              r10,#0x00
  212 00000108 D0EA            BEQ              OFF_MOTOR
  213 0000010A 3901            subs             r1, #1



ARM Macro Assembler    Page 7 


  214 0000010C D1F8            bne              GAUCHE
  215 0000010E F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  216 00000112 4924            ldr              r1, = DUREE_TOURNE ;; pour la d
                                                            uree de la boucle d
                                                            'attente1 (wait1)
  217 00000114         tempo
  218 00000114 3901            subs             r1, #1
  219 00000116 D1FD            bne              tempo
  220 00000118 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  221 0000011C 4921            ldr              r1, = DUREE_TOURNE
  222 0000011E         tempo1
  223 0000011E 3901            subs             r1, #1
  224 00000120 D1FD            bne              tempo1
  225 00000122 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  226 00000126 491F            ldr              r1, = DUREE_TOURNE ;; pour la d
                                                            uree de la boucle d
                                                            'attente1 (wait1)
  227 00000128         tempo2
  228 00000128 3901            subs             r1, #1
  229 0000012A D1FD            bne              tempo2
  230 0000012C F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  231 00000130 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  232 00000134 E7A9            B                loop
  233 00000136         
  234 00000136         DROITE
  235 00000136 F8D9 A000       ldr              r10,[r9]
  236 0000013A F1BA 0F00       CMP              r10,#0x00
  237 0000013E D0CF            BEQ              OFF_MOTOR
  238 00000140 3901            subs             r1, #1
  239 00000142 D1F8            bne              DROITE
  240 00000144 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  241 00000148 4916            ldr              r1, = DUREE_TOURNE ;; pour la d
                                                            uree de la boucle d
                                                            'attente1 (wait1)
  242 0000014A         tempoD
  243 0000014A 3901            subs             r1, #1
  244 0000014C D1FD            bne              tempoD
  245 0000014E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  246 00000152 4914            ldr              r1, = DUREE_TOURNE
  247 00000154         tempoD1
  248 00000154 3901            subs             r1, #1
  249 00000156 D1FD            bne              tempoD1
  250 00000158 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  251 0000015C 4911            ldr              r1, = DUREE_TOURNE ;; pour la d
                                                            uree de la boucle d
                                                            'attente1 (wait1)
  252 0000015E         tempoD2
  253 0000015E 3901            subs             r1, #1
  254 00000160 D1FD            bne              tempoD2
  255 00000162 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  256 00000166 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  257 0000016A E78E            B                loop
  258 0000016C         
  259 0000016C BF00            NOP
  260 0000016E                 END
              00 00 400FE108 
              40025400 
              4002551C 
              40025500 



ARM Macro Assembler    Page 8 


              400250C0 
              40007510 
              4000751C 
              40007300 
              40024510 
              4002451C 
              4002400C 
              0001FFFF 
              002FFFFF 
              015FFFFF 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_priseenmain_moteurs.d -o.\objects\rk_priseenmain_mote
urs.o -I.\RTE\_Target_1 -IC:\Users\polom\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.
1\CMSIS\Core\Include -IC:\Users\polom\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\D
evice\ARM\ARMCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SE
TA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --pre
define="ARMCM3 SETA 1" --list=.\listings\rk_priseenmain_moteurs.lst RK_PriseEnM
ain_Moteurs.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: .text unused
DROITE 00000136

Symbol: DROITE
   Definitions
      At line 234 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 168 in file RK_PriseEnMain_Moteurs.s
      At line 239 in file RK_PriseEnMain_Moteurs.s

GAUCHE 00000100

Symbol: GAUCHE
   Definitions
      At line 209 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 166 in file RK_PriseEnMain_Moteurs.s
      At line 214 in file RK_PriseEnMain_Moteurs.s

OFF_MOTOR 000000E0

Symbol: OFF_MOTOR
   Definitions
      At line 196 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 163 in file RK_PriseEnMain_Moteurs.s
      At line 212 in file RK_PriseEnMain_Moteurs.s
      At line 237 in file RK_PriseEnMain_Moteurs.s

ON_MOTOR 000000EE

Symbol: ON_MOTOR
   Definitions
      At line 202 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 177 in file RK_PriseEnMain_Moteurs.s
      At line 182 in file RK_PriseEnMain_Moteurs.s
      At line 191 in file RK_PriseEnMain_Moteurs.s

ReadState 0000006A

Symbol: ReadState
   Definitions
      At line 141 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 145 in file RK_PriseEnMain_Moteurs.s
Comment: ReadState used once
__main 00000000

Symbol: __main
   Definitions
      At line 74 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 8 in file RK_PriseEnMain_Moteurs.s
Comment: __main used once
end_ 000000A8

Symbol: end_
   Definitions
      At line 170 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 194 in file RK_PriseEnMain_Moteurs.s
      At line 200 in file RK_PriseEnMain_Moteurs.s

loop 0000008A

Symbol: loop
   Definitions
      At line 158 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 169 in file RK_PriseEnMain_Moteurs.s
      At line 207 in file RK_PriseEnMain_Moteurs.s
      At line 232 in file RK_PriseEnMain_Moteurs.s
      At line 257 in file RK_PriseEnMain_Moteurs.s

tempo 00000114

Symbol: tempo
   Definitions
      At line 217 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 219 in file RK_PriseEnMain_Moteurs.s
Comment: tempo used once
tempo1 0000011E

Symbol: tempo1
   Definitions
      At line 222 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 224 in file RK_PriseEnMain_Moteurs.s
Comment: tempo1 used once
tempo2 00000128

Symbol: tempo2
   Definitions
      At line 227 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 229 in file RK_PriseEnMain_Moteurs.s
Comment: tempo2 used once
tempoD 0000014A

Symbol: tempoD
   Definitions
      At line 242 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 244 in file RK_PriseEnMain_Moteurs.s
Comment: tempoD used once
tempoD1 00000154

Symbol: tempoD1
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 247 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 249 in file RK_PriseEnMain_Moteurs.s
Comment: tempoD1 used once
tempoD2 0000015E

Symbol: tempoD2
   Definitions
      At line 252 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 254 in file RK_PriseEnMain_Moteurs.s
Comment: tempoD2 used once
wait10 000000BE

Symbol: wait10
   Definitions
      At line 179 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 184 in file RK_PriseEnMain_Moteurs.s
Comment: wait10 used once
wait2 000000D0

Symbol: wait2
   Definitions
      At line 188 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 193 in file RK_PriseEnMain_Moteurs.s
Comment: wait2 used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE0_1 00000003

Symbol: BROCHE0_1
   Definitions
      At line 63 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 129 in file RK_PriseEnMain_Moteurs.s
      At line 133 in file RK_PriseEnMain_Moteurs.s
      At line 136 in file RK_PriseEnMain_Moteurs.s

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 61 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 90 in file RK_PriseEnMain_Moteurs.s
      At line 94 in file RK_PriseEnMain_Moteurs.s
      At line 98 in file RK_PriseEnMain_Moteurs.s
      At line 104 in file RK_PriseEnMain_Moteurs.s
      At line 106 in file RK_PriseEnMain_Moteurs.s

BROCHE6_7 000000C0

Symbol: BROCHE6_7
   Definitions
      At line 65 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 115 in file RK_PriseEnMain_Moteurs.s
      At line 119 in file RK_PriseEnMain_Moteurs.s
      At line 122 in file RK_PriseEnMain_Moteurs.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 72 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 174 in file RK_PriseEnMain_Moteurs.s
      At line 186 in file RK_PriseEnMain_Moteurs.s

DUREE_OFF 0001FFFF

Symbol: DUREE_OFF
   Definitions
      At line 69 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 155 in file RK_PriseEnMain_Moteurs.s
Comment: DUREE_OFF used once
DUREE_TOURNE 015FFFFF

Symbol: DUREE_TOURNE
   Definitions
      At line 67 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 216 in file RK_PriseEnMain_Moteurs.s
      At line 221 in file RK_PriseEnMain_Moteurs.s
      At line 226 in file RK_PriseEnMain_Moteurs.s
      At line 241 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 246 in file RK_PriseEnMain_Moteurs.s
      At line 251 in file RK_PriseEnMain_Moteurs.s

GPIO_I_PUR 00000510

Symbol: GPIO_I_PUR
   Definitions
      At line 58 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 114 in file RK_PriseEnMain_Moteurs.s
      At line 128 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 55 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 93 in file RK_PriseEnMain_Moteurs.s
      At line 118 in file RK_PriseEnMain_Moteurs.s
      At line 132 in file RK_PriseEnMain_Moteurs.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 47 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 89 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 51 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 97 in file RK_PriseEnMain_Moteurs.s
Comment: GPIO_O_DR2R used once
GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 40 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 114 in file RK_PriseEnMain_Moteurs.s
      At line 118 in file RK_PriseEnMain_Moteurs.s
      At line 122 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 43 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 128 in file RK_PriseEnMain_Moteurs.s
      At line 132 in file RK_PriseEnMain_Moteurs.s
      At line 136 in file RK_PriseEnMain_Moteurs.s

GPIO_PORTF_BASE 40025000



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_BASE
   Definitions
      At line 30 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 89 in file RK_PriseEnMain_Moteurs.s
      At line 93 in file RK_PriseEnMain_Moteurs.s
      At line 97 in file RK_PriseEnMain_Moteurs.s
      At line 106 in file RK_PriseEnMain_Moteurs.s

OFF_LED 00000000

Symbol: OFF_LED
   Definitions
      At line 37 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: OFF_LED unused
STCTRL E000E020

Symbol: STCTRL
   Definitions
      At line 33 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: STCTRL unused
STCURRENT E000E028

Symbol: STCURRENT
   Definitions
      At line 35 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: STCURRENT unused
STRELOAD E000E024

Symbol: STRELOAD
   Definitions
      At line 34 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: STRELOAD unused
SYSCTL_PERIPH_GPIO 400FE108

Symbol: SYSCTL_PERIPH_GPIO
   Definitions
      At line 27 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 77 in file RK_PriseEnMain_Moteurs.s
Comment: SYSCTL_PERIPH_GPIO used once
SYS_TICK_BASE E000E010

Symbol: SYS_TICK_BASE
   Definitions
      At line 32 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 33 in file RK_PriseEnMain_Moteurs.s
      At line 34 in file RK_PriseEnMain_Moteurs.s
      At line 35 in file RK_PriseEnMain_Moteurs.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

DISTANCE 00000000

Symbol: DISTANCE
   Definitions
      At line 25 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 199 in file RK_PriseEnMain_Moteurs.s
Comment: DISTANCE used once
MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 16 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 225 in file RK_PriseEnMain_Moteurs.s
      At line 240 in file RK_PriseEnMain_Moteurs.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 15 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 153 in file RK_PriseEnMain_Moteurs.s
      At line 171 in file RK_PriseEnMain_Moteurs.s
      At line 205 in file RK_PriseEnMain_Moteurs.s
      At line 230 in file RK_PriseEnMain_Moteurs.s
      At line 245 in file RK_PriseEnMain_Moteurs.s
      At line 255 in file RK_PriseEnMain_Moteurs.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 17 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 14 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 197 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 13 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 151 in file RK_PriseEnMain_Moteurs.s
      At line 203 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 22 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 215 in file RK_PriseEnMain_Moteurs.s
      At line 250 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 21 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 154 in file RK_PriseEnMain_Moteurs.s
      At line 172 in file RK_PriseEnMain_Moteurs.s
      At line 206 in file RK_PriseEnMain_Moteurs.s
      At line 220 in file RK_PriseEnMain_Moteurs.s
      At line 231 in file RK_PriseEnMain_Moteurs.s
      At line 256 in file RK_PriseEnMain_Moteurs.s

MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 23 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 20 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 198 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 19 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 152 in file RK_PriseEnMain_Moteurs.s
      At line 204 in file RK_PriseEnMain_Moteurs.s

MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 11 in file RK_PriseEnMain_Moteurs.s
   Uses
      At line 148 in file RK_PriseEnMain_Moteurs.s
Comment: MOTEUR_INIT used once
Reset_Handlerone 00000000

Symbol: Reset_Handlerone
   Definitions
      At line 24 in file RK_PriseEnMain_Moteurs.s
   Uses
      None
Comment: Reset_Handlerone unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

13 symbols
386 symbols in table

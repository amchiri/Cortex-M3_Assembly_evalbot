


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument); 
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (configure les pwms + GPIO)
    3 00000000         
    4 00000000         ;Les pages se réfèrent au datasheet lm3s9b92.pdf
    5 00000000         
    6 00000000         ;Cablage :
    7 00000000         ;pin 10/PD0/PWM0 => input PWM du pont en H DRV8801RT
    8 00000000         ;pin 11/PD1/PWM1 => input Phase_R  du pont en H DRV8801R
                       T
    9 00000000         ;pin 12/PD2   => input SlowDecay commune aux 2 ponts en 
                       H
   10 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC 
   11 00000000         ;pin 86/PH0/PWM2 => input PWM du 2nd pont en H
   12 00000000         ;pin 85/PH1/PWM3 => input Phase du 2nd pont en H 
   13 00000000         
   14 00000000         ;; Hexa corresponding values to pin numbers
   15 00000000 00000001 
                       GPIO_0  EQU              0x1
   16 00000000 00000002 
                       GPIO_1  EQU              0x2
   17 00000000 00000004 
                       GPIO_2  EQU              0x4
   18 00000000 00000020 
                       GPIO_5  EQU              0x20
   19 00000000         
   20 00000000         ;; pour enable clock    0x400FE000
   21 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   22 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   23 00000000         
   24 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   25 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   26 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE
   27 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   28 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500
   29 00000000 4000751C 
                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   30 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po



ARM Macro Assembler    Page 2 


                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   31 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   32 00000000         
   33 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   34 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   35 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   36 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   37 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   38 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   39 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   40 00000000         
   41 00000000         ;; Pulse Width Modulator (PWM) configuration
   42 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   43 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   44 00000000         
   45 00000000         ;Block PWM0 pour sorties PWM0 et PWM1 (moteur 1)
   46 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   47 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   48 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   49 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C



ARM Macro Assembler    Page 3 


   50 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   51 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   52 00000000         
   53 00000000         ;Block PWM1 pour sorties PWM1 et PWM2 (moteur 2)
   54 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   55 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   56 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   57 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C
   58 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   59 00000000 400280A4 
                       PWM1GENB
                               EQU              PWM_BASE+0x0A4
   60 00000000         
   61 00000000         
   62 00000000 400FE060 
                       RCC     EQU              0x400FE060  ; Adresse du regist
                                                            re RCC
   63 00000000 400FE070 
                       RCC2    EQU              0x400FE070  ; Adresse du regist
                                                            re RCC2 (si utilisé
                                                            )
   64 00000000 000007C0 
                       RCC_XTAL
                               EQU              0x000007C0  ; Masque pour le ch
                                                            amp XTAL dans RCC
   65 00000000 00000540 
                       RCC_XTAL_16MHZ
                               EQU              0x00000540  ; Valeur pour un cr
                                                            istal de 16 MHz
   66 00000000 00000030 
                       RCC_OSCSRC
                               EQU              0x00000030  ; Masque pour le ch
                                                            amp OSCSRC dans RCC
                                                            
   67 00000000 00000000 
                       RCC_OSCSRC_MAIN
                               EQU              0x00000000  ; Utiliser l'oscill
                                                            ateur principal
   68 00000000 00002000 
                       RCC_PWRDN
                               EQU              0x00002000  ; Bit de mise hors 
                                                            tension du PLL
   69 00000000 40000000 
                       RCC2_DIV400
                               EQU              0x40000000  ; Utiliser le divis
                                                            eur 400 dans RCC2



ARM Macro Assembler    Page 4 


   70 00000000 07800000 
                       RCC_SYSDIV
                               EQU              0x07800000  ; Masque pour le ch
                                                            amp SYSDIV dans RCC
                                                            
   71 00000000 1F800000 
                       RCC_SYSDIV2
                               EQU              0x1F800000  ; Masque pour le ch
                                                            amp SYSDIV2 dans RC
                                                            C2
   72 00000000         
   73 00000000         ;Block Systtick
   74 00000000         
   75 00000000 E000E018 
                       STCURRENT
                               EQU              0xE000E018  ; Adresse du regist
                                                            re STCURRENT
   76 00000000 E000E010 
                       STCTRL  EQU              0xE000E010  ; Adresse du regist
                                                            re STCTRL
   77 00000000 E000E014 
                       STRELOAD
                               EQU              0xE000E014  ; Adresse du regist
                                                            re STRELOAD
   78 00000000         
   79 00000000 4003000C 
                       GPTMCTL EQU              0x40030000+0x00C
   80 00000000 40030000 
                       GPTMCFG EQU              0x40030000
   81 00000000 40030030 
                       GPTMTAMATCHR
                               EQU              0x40030000+0x030
   82 00000000         ; Broches select
   83 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   84 00000000         
   85 00000000         
   86 00000000         
   87 00000000 000001A2 
                       VITESSE EQU              0x1A2       ; Valeures plus pet
                                                            ites => Vitesse plu
                                                            s rapide exemple 0x
                                                            192
   88 00000000         ; Valeures plus grandes => Vitesse moins rapide exemple 
                       0x1B2
   89 00000000         
   90 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   91 00000000         
   92 00000000                 AREA             |.text|, CODE, READONLY
   93 00000000                 ENTRY
   94 00000000         
   95 00000000         ;; The EXPORT command specifies that a symbol can be acc
                       essed by other shared objects or executables.
   96 00000000                 EXPORT           MOTEUR_INIT
   97 00000000                 EXPORT           MOTEUR_DROIT_ON
   98 00000000                 EXPORT           MOTEUR_DROIT_OFF



ARM Macro Assembler    Page 5 


   99 00000000                 EXPORT           MOTEUR_DROIT_AVANT
  100 00000000                 EXPORT           MOTEUR_DROIT_ARRIERE
  101 00000000                 EXPORT           MOTEUR_DROIT_INVERSE
  102 00000000                 EXPORT           MOTEUR_GAUCHE_ON
  103 00000000                 EXPORT           MOTEUR_GAUCHE_OFF
  104 00000000                 EXPORT           MOTEUR_GAUCHE_AVANT
  105 00000000                 EXPORT           MOTEUR_GAUCHE_ARRIERE
  106 00000000                 EXPORT           MOTEUR_GAUCHE_INVERSE
  107 00000000                 EXPORT           Reset_Handlerone
  108 00000000                 EXPORT           RESET_TIMER
  109 00000000                 EXPORT           INIT_TIMER
  110 00000000                 EXPORT           DISTANCE
  111 00000000                 EXPORT           FREEZE_TIMER
  112 00000000                 EXPORT           UNFREEZE_TIMER
  113 00000000         
  114 00000000         
  115 00000000         
  116 00000000         MOTEUR_INIT
  117 00000000 4E9A            ldr              r6, = SYSCTL_RCGC0
  118 00000002 6830            ldr              r0, [R6]
  119 00000004 F440 1080       ORR              r0, r0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O
                                                            N (p271) 
  120 00000008 6030            str              r0, [r6]
  121 0000000A         
  122 0000000A         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
  123 0000000A         ;Je ne fais rien car par defaut = OK!!
  124 0000000A         ;*(int *) (0x400FE060)= *(int *)(0x400FE060)...;
  125 0000000A         
  126 0000000A         ;RCGC2 :  Enable port D GPIO(p291 ) car Moteur Droit sur
                        port D 
  127 0000000A 4E99            ldr              r6, = SYSCTL_RCGC2
  128 0000000C 6830            ldr              r0, [R6]
  129 0000000E F040 0008       ORR              r0, r0, #0x08 ;; Enable port D 
                                                            GPIO 
  130 00000012 6030            str              r0, [r6]
  131 00000014         
  132 00000014         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme moteurs)
  133 00000014 4E96            ldr              r6, = SYSCTL_RCGC2
  134 00000016 6830            ldr              r0, [R6]
  135 00000018 F040 0080       ORR              r0, r0, #0x80 ;; Enable port H 
                                                            GPIO 
  136 0000001C 6030            str              r0, [r6]
  137 0000001E         
  138 0000001E BF00            nop
  139 00000020 BF00            nop
  140 00000022 BF00            nop
  141 00000024         
  142 00000024         ;;Pin muxing pour PWM, port D, reg. GPIOPCTL(p444), 4bit
                       s de PCM0=0001<=>PWM (voir p1261)
  143 00000024         ;;il faut mettre 1 pour avoir PD0=PWM0 et PD1=PWM1
  144 00000024 4E93            ldr              r6, = GPIOPCTL_D
  145 00000026         ;ldr r0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  146 00000026         ;ORR r0, r0, #0x01 ;; Port D, pin 1 = PWM 
  147 00000026 F04F 0001       mov              r0, #0x01
  148 0000002A 6030            str              r0, [r6]
  149 0000002C         
  150 0000002C         ;;MOT2 : Pin muxing pour PWM, port H, reg. GPIOPCTL(p444



ARM Macro Assembler    Page 6 


                       ), 4bits de PCM0=0001<=>PWM (voir p1261)
  151 0000002C         ;;il faut mettre mux = 2 pour avoir PH0=PWM2 et PH1=PWM3
                       
  152 0000002C 4E92            ldr              r6, = GPIOPCTL_H
  153 0000002E F04F 0002       mov              r0, #0x02
  154 00000032 6030            str              r0, [r6]
  155 00000034         
  156 00000034         ;;Alternate Function Select (p 426), PD0 utilise alernat
                       e fonction (PWM au dessus)
  157 00000034         ;;donc PD0 = 1
  158 00000034 4E91            ldr              r6, = GPIOAFSEL_D
  159 00000036 6830            ldr              r0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  160 00000038 F040 0001       ORR              r0, r0, #0x01 ;
  161 0000003C 6030            str              r0, [r6]
  162 0000003E         
  163 0000003E         ;;MOT2 : Alternate Function Select (p 426), PH0 utilise 
                       PWM donc Alternate funct
  164 0000003E         ;;donc PH0 = 1
  165 0000003E 4E90            ldr              r6, = GPIOAFSEL_H
  166 00000040 6830            ldr              r0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  167 00000042 F040 0001       ORR              r0, r0, #0x01 ;
  168 00000046 6030            str              r0, [r6]
  169 00000048         
  170 00000048         ;;-----------PWM0 pour moteur 1 connecté à PD0
  171 00000048         ;;PWM0 produit PWM0 et PWM1 output
  172 00000048         ;;Config Modes PWM0 + mode GenA + mode GenB
  173 00000048 4E8E            ldr              r6, = PWM0CTL
  174 0000004A F04F 0002       mov              r0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  175 0000004E 6030            str              r0, [r6]
  176 00000050         
  177 00000050 4E8D            ldr              r6, =PWM0GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  178 00000052         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  179 00000052 F04F 00B0       mov              r0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  180 00000056 6030            str              r0, [r6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00  
  181 00000058         
  182 00000058 4E8C            ldr              r6, =PWM0GENB ;en comptage croi
                                                            ssant, qd comparate
                                                            urB = compteur => s
                                                            ortie pwmA=1



ARM Macro Assembler    Page 7 


  183 0000005A F44F 6030       mov              r0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  184 0000005E 6030            str              r0, [r6]
  185 00000060         ;Config Compteur, comparateur A et comparateur B
  186 00000060         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  187 00000060         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8, 
  188 00000060         ;;on divise par 2 car moteur 6v sur alim 12v
  189 00000060 4E8B            ldr              r6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  190 00000062 F44F 70FA       mov              r0, #0x1F4
  191 00000066 6030            str              r0,[r6]
  192 00000068         
  193 00000068 4E8A            ldr              r6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  194 0000006A F44F 70D1       mov              r0, #VITESSE
  195 0000006E 6030            str              r0, [r6]
  196 00000070         
  197 00000070 4E89            ldr              r6, =PWM0CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (rappo
                                                            rt cyclique depend 
                                                            de CMPA)
  198 00000072 F44F 70FA       mov              r0, #0x1F4
  199 00000076 6030            str              r0, [r6]
  200 00000078         
  201 00000078         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  202 00000078 4E82            ldr              r6, =PWM0CTL
  203 0000007A 6830            ldr              r0, [r6]
  204 0000007C F040 0007       ORR              r0, r0, #0x07
  205 00000080 6030            str              r0, [r6]
  206 00000082         
  207 00000082         ;;-----------PWM2 pour moteur 2 connecté à PH0
  208 00000082         ;;PWM1block produit PWM2 et PWM3 output
  209 00000082         ;;Config Modes PWM2 + mode GenA + mode GenB
  210 00000082 4E86            ldr              r6, = PWM1CTL
  211 00000084 F04F 0002       mov              r0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  212 00000088 6030            str              r0, [r6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  213 0000008A         
  214 0000008A 4E85            ldr              r6, =PWM1GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  215 0000008C         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  216 0000008C F04F 00B0       mov              r0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  217 00000090 6030            str              r0, [r6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00  



ARM Macro Assembler    Page 8 


  218 00000092         
  219 00000092         ;*(int *)(0x40028000+0x060)=0x0B0; //
  220 00000092 4E84            ldr              r6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  221 00000094 F44F 6030       mov              r0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  222 00000098 6030            str              r0, [r6]    ;en comptage croiss
                                                            ant, qd comparateur
                                                            B = compteur => sor
                                                            tie pwmA=1
  223 0000009A         ;Config Compteur, comparateur A et comparateur B
  224 0000009A         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  225 0000009A         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8, 
  226 0000009A         ;;on divise par 2 car moteur 6v sur alim 12v
  227 0000009A         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4
  228 0000009A 4E83            ldr              r6, =PWM1LOAD
  229 0000009C F44F 70FA       mov              r0, #0x1F4
  230 000000A0 6030            str              r0,[r6]
  231 000000A2         
  232 000000A2 4E82            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  233 000000A4 F44F 70D1       mov              r0, #VITESSE
  234 000000A8 6030            str              r0, [r6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;
  235 000000AA         
  236 000000AA 4E81            ldr              r6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (CMPA 
                                                            depend du rapport c
                                                            yclique)
  237 000000AC F44F 70FA       mov              r0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4; 
  238 000000B0 6030            str              r0, [r6]
  239 000000B2         
  240 000000B2         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  241 000000B2 4E7A            ldr              r6, =PWM1CTL
  242 000000B4 6830            ldr              r0, [r6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  243 000000B6 F040 0007       ORR              r0, r0, #0x07
  244 000000BA 6030            str              r0, [r6]
  245 000000BC         
  246 000000BC         ;;-----Fin config des PWMs   
  247 000000BC         
  248 000000BC         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)
  249 000000BC 4E7D            ldr              r6, =GPIODIR_D
  250 000000BE 6830            ldr              r0, [r6]
  251 000000C0 F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  252 000000C4 6030            str              r0,[r6]
  253 000000C6         ;Port D, 2mA les meme
  254 000000C6 4E7C            ldr              r6, =GPIODR2R_D ; 



ARM Macro Assembler    Page 9 


  255 000000C8 6830            ldr              r0, [r6]
  256 000000CA F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  257 000000CE 6030            str              r0,[r6]
  258 000000D0         ;Port D, Digital Enable
  259 000000D0 4E7A            ldr              r6, =GPIODEN_D ;
  260 000000D2 6830            ldr              r0, [r6]
  261 000000D4 F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  262 000000D8 6030            str              r0,[r6]
  263 000000DA         ;Port D : mise à 1 de slow Decay et 12V et mise à 0 pour
                        dir et pwm
  264 000000DA 4E79            ldr              r6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  265 000000DC F04F 0024       mov              r0, #(GPIO_2+GPIO_5) ; #0x24
  266 000000E0 6030            str              r0,[r6]
  267 000000E2         
  268 000000E2         ;MOT2, PH1 pour sens moteur ouput
  269 000000E2 4E78            ldr              r6, =GPIODIR_H
  270 000000E4 F04F 0003       mov              r0, #0x03   ; 
  271 000000E8 6030            str              r0,[r6]
  272 000000EA         ;Port H, 2mA les meme
  273 000000EA 4E77            ldr              r6, =GPIODR2R_H
  274 000000EC F04F 0003       mov              r0, #0x03
  275 000000F0 6030            str              r0,[r6]
  276 000000F2         ;Port H, Digital Enable
  277 000000F2 4E76            ldr              r6, =GPIODEN_H
  278 000000F4 F04F 0003       mov              r0, #0x03
  279 000000F8 6030            str              r0,[r6]
  280 000000FA         ;Port H : mise à 1 pour dir 
  281 000000FA 4E75            ldr              r6, =(GPIODATA_H +(GPIO_1<<2))
  282 000000FC F04F 0002       mov              r0, #0x02
  283 00000100 6030            str              r0,[r6]
  284 00000102         
  285 00000102 4770            BX               LR          ; FIN du sous progr
                                                            amme d'init.
  286 00000104         
  287 00000104         ;Enable PWM0 (bit 0) et PWM2 (bit 2) p1145 
  288 00000104         ;Attention ici c'est les sorties PWM0 et PWM2
  289 00000104         ;qu'on controle, pas les blocks PWM0 et PWM1!!!
  290 00000104         MOTEUR_DROIT_ON
  291 00000104         ;Enable sortie PWM0 (bit 0), p1145 
  292 00000104 4E73            ldr              r6, =PWMENABLE
  293 00000106 6830            ldr              r0, [r6]
  294 00000108 F040 0001       orr              r0, #0x01   ;bit 0 à 1
  295 0000010C 6030            str              r0, [r6]
  296 0000010E 4770            BX               LR
  297 00000110         
  298 00000110         MOTEUR_DROIT_OFF
  299 00000110 4E70            ldr              r6, =PWMENABLE
  300 00000112 6830            ldr              r0, [r6]
  301 00000114 F000 000E       and              r0, #0x0E   ;bit 0 à 0
  302 00000118 6030            str              r0, [r6]
  303 0000011A 4770            BX               LR
  304 0000011C         
  305 0000011C         MOTEUR_GAUCHE_ON
  306 0000011C 4E6D            ldr              r6, =PWMENABLE
  307 0000011E 6830            ldr              r0, [r6]
  308 00000120 F040 0004       orr              r0, #0x04   ;bit 2 à 1



ARM Macro Assembler    Page 10 


  309 00000124 6030            str              r0, [r6]
  310 00000126 4770            BX               LR
  311 00000128         
  312 00000128         MOTEUR_GAUCHE_OFF
  313 00000128 4E6A            ldr              r6, =PWMENABLE
  314 0000012A 6830            ldr              r0, [r6]
  315 0000012C F000 000B       and              r0, #0x0B   ;bit 2 à 0
  316 00000130 6030            str              r0, [r6]
  317 00000132 4770            BX               LR
  318 00000134         
  319 00000134         MOTEUR_DROIT_ARRIERE
  320 00000134         ;Inverse Direction (GPIO_D1)
  321 00000134 4E68            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  322 00000136 F04F 0000       mov              r0, #0
  323 0000013A 6030            str              r0,[r6]
  324 0000013C 4770            BX               LR
  325 0000013E         
  326 0000013E         MOTEUR_DROIT_AVANT
  327 0000013E         ;Inverse Direction (GPIO_D1)
  328 0000013E 4E66            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  329 00000140 F04F 0002       mov              r0, #2
  330 00000144 6030            str              r0,[r6]
  331 00000146 4770            BX               LR
  332 00000148         
  333 00000148         MOTEUR_GAUCHE_ARRIERE
  334 00000148         ;Inverse Direction (GPIO_D1)
  335 00000148 4E61            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  336 0000014A F04F 0002       mov              r0, #2      ; contraire du mote
                                                            ur Droit
  337 0000014E 6030            str              r0,[r6]
  338 00000150 4770            BX               LR
  339 00000152         
  340 00000152         MOTEUR_GAUCHE_AVANT
  341 00000152         ;Inverse Direction (GPIO_D1)
  342 00000152 4E5F            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  343 00000154 F04F 0000       mov              r0, #0
  344 00000158 6030            str              r0,[r6]
  345 0000015A 4770            BX               LR
  346 0000015C         
  347 0000015C         MOTEUR_DROIT_INVERSE
  348 0000015C         ;Inverse Direction (GPIO_D1)
  349 0000015C 4E5E            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  350 0000015E 6831            ldr              r1, [r6]
  351 00000160 F081 0002       EOR              r0, r1, #GPIO_1
  352 00000164 6030            str              r0,[r6]
  353 00000166 4770            BX               LR
  354 00000168         
  355 00000168         MOTEUR_GAUCHE_INVERSE
  356 00000168         ;Inverse Direction (GPIO_D1)
  357 00000168 4E59            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  358 0000016A 6831            ldr              r1, [r6]
  359 0000016C F081 0002       EOR              r0, r1, #GPIO_1
  360 00000170 6030            str              r0,[r6]
  361 00000172 4770            BX               LR
  362 00000174         
  363 00000174         INIT_TIMER
  364 00000174         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION RCC 
  365 00000174 4A59            LDR              R2, =RCC    ; Adresse du regist
                                                            re RCC



ARM Macro Assembler    Page 11 


  366 00000176 6811            LDR              R1, [R2]    ; Contenue du regis
                                                            tre RCC
  367 00000178 F421 61F8       BIC              R1, R1, #0X7C0 ; Effacer le cha
                                                            mp OSCSRC
  368 0000017C F041 0100       ORR              R1, R1, #RCC_OSCSRC_MAIN ; Séle
                                                            ctionner l'oscillat
                                                            eur principal
  369 00000180 F041 0100       ORR              R1, R1, #(0x00<<6) ; Définir la
                                                             fréquence du crist
                                                            al à 16 MHz
  370 00000184 F421 5100       BIC              R1, R1, #RCC_PWRDN 
                                                            ; Activer le PLL
  371 00000188 6011            STR              R1, [R2]
  372 0000018A         ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvFin configuration RCC
  373 0000018A         
  374 0000018A         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION STRELOAD 
  375 0000018A 4B55            LDR              R3, =0xE000E014 ; Adresse du re
                                                            gistre STRELOAD
  376 0000018C 4955            LDR              R1, =0x00F423FF ; Valeur de rec
                                                            hargement pour 1 se
                                                            conde avec une horl
                                                            oge de 16 MHz
  377 0000018E 6019            STR              R1, [R3]
  378 00000190         ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvFin configuration STRELOA
                       D 
  379 00000190         
  380 00000190         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION STCURRENT  
                          
  381 00000190 4B55            LDR              R3, =0xE000E018 ; Adresse du re
                                                            gistre STCURRENT
  382 00000192 F04F 0100       MOV              R1, #0
  383 00000196 6019            STR              R1, [R3]    ; Ecriture pour res
                                                            et STCURRENT
  384 00000198         ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvFin configuration STCURRE
                       NT
  385 00000198         
  386 00000198         ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^CONFIGURATION SysTick
  387 00000198 4B54            LDR              R3, =0xE000E010 ; Adresse du re
                                                            gistre STCTRL
  388 0000019A 6819            LDR              R1, [R3]    ; Contenue du regis
                                                            tre STCTRL
  389 0000019C F041 0101       ORR              R1, R1, #1  ; Mettre le bit ENA
                                                            BLE à 1
  390 000001A0 F041 0102       ORR              R1, R1, #2  ; Mettre le bit TIC
                                                            KINT à 1 si les int
                                                            erruptions sont néc
                                                            essaires
  391 000001A4 6019            STR              R1, [R3]
  392 000001A6         ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvFin configuration STCURRE
                       NT
  393 000001A6 4770            BX               LR
  394 000001A8         
  395 000001A8         RESET_TIMER
  396 000001A8 484F            ldr              r0,=STCURRENT ; Adresse du regi
                                                            stre STCTRL
  397 000001AA F04F 0A00       ldr              r10,=0x0
  398 000001AE F8C0 A000       str              r10, [r0]   ; Ecriture de 0 dan
                                                            s le registre pour 
                                                            reset le timer 



ARM Macro Assembler    Page 12 


  399 000001B2 F04F 0B00       ldr              r11,=0x0    ; Remetre notre reg
                                                            istre de seconde à 
                                                            0
  400 000001B6 4770            BX               LR
  401 000001B8         
  402 000001B8         FREEZE_TIMER
  403 000001B8 484C            ldr              r0,=0xE000E010 ; Adresse du reg
                                                            istre STCTRL
  404 000001BA F8D0 A000       ldr              r10, [r0]
  405 000001BE F02A 0A01       AND              r10, r10,#0xFFFFFFFE ; On Met l
                                                            e dernier bit a 0
  406 000001C2 F8C0 A000       str              r10, [r0]   ; Ecriture de 0 dan
                                                            s le registre pour 
                                                            reset le timer 
  407 000001C6 4770            BX               LR
  408 000001C8         
  409 000001C8         UNFREEZE_TIMER
  410 000001C8 4848            ldr              r0,=0xE000E010 ; Adresse du reg
                                                            istre STCTRL
  411 000001CA F8D0 A000       ldr              r10, [r0]
  412 000001CE F04A 0A01       ORR              r10, r10, #1 ; Mettre le bit EN
                                                            ABLE à 1
  413 000001D2 F8C0 A000       str              r10, [r0]   ; Ecriture de 0 dan
                                                            s le registre pour 
                                                            reset le timer 
  414 000001D6 4770            BX               LR
  415 000001D8         
  416 000001D8         DISTANCE
  417 000001D8 F04F 0503       mov              r5, #3
  418 000001DC F04F 0402       mov              r4, #2
  419 000001E0         
  420 000001E0         ; calcule de la distance en centimètre
  421 000001E0 FB0B FB05       MUL              r11,r11,r5  ; multipli r11 par 
                                                            3
  422 000001E4 FBBB FBF4       udiv             r11, r11,r4 ; divise r11 par 2
  423 000001E8 F04F 0500       mov              r5, #0      ; Contient les diza
                                                            ines pour allumer l
                                                            a led2
  424 000001EC F04F 0400       mov              r4, #0      ; Continent les uni
                                                            tés pour allumer la
                                                             led1
  425 000001F0         
  426 000001F0         ; Calcule les dizaines de la distance
  427 000001F0         
  428 000001F0         dizaine
  429 000001F0 F1BB 0F0A       cmp              r11, #10    ; compare r11(dista
                                                            nce) avec 10
  430 000001F4 D404            bmi              finDizaine  ; r6 < 10 ? finDiza
                                                            ine : continue
  431 000001F6 F1BB 0B0A       subs             r11, #10    ; soustraire 10 de 
                                                            r6
  432 000001FA F105 0501       add              r5, #1      ; incrémente r5 pou
                                                            r compterle nombre 
                                                            de dizaine
  433 000001FE E7F7            b                dizaine     ; Répéter
  434 00000200         
  435 00000200         finDizaine
  436 00000200 445C            add              r4, r11     ; stock les unités 
                                                            réstantes dans r6



ARM Macro Assembler    Page 13 


  437 00000202         
  438 00000202         blinkDist
  439 00000202 493B            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  440 00000204         ; compare les dizaines
  441 00000204 2D00            cmp              r5, #0      ;; Comapre les diza
                                                            ines(r5) avec 0
  442 00000206 D004            BEQ              led2        ;;
  443 00000208 3D01            subs             r5, #1      ;; Retire 1 aux diz
                                                            aines(r5)
  444 0000020A F04F 0320       ldr              r3,=(BROCHE4_5 & 0x20)
  445 0000020E 603B            str              r3, [r7]    ;; Allume la led 2
  446 00000210 E005            b                wait2
  447 00000212         ; compare les unités
  448 00000212         led2
  449 00000212 2C00            cmp              r4, #0      ;; Compare les unit
                                                            és(r4) avec 0
  450 00000214 D00C            BEQ              fin         ;; 
  451 00000216 3C01            subs             r4, #1      ;; Retire 1 aux uni
                                                            tés(r4)
  452 00000218 F04F 0310       ldr              r3,=(BROCHE4_5 & 0x10)
  453 0000021C 603B            str              r3, [r7]    ;; Allume LED1 port
                                                            F broche 4&5 : 0011
                                                            0000 (contenu de r3
                                                            )
  454 0000021E         
  455 0000021E 3901    wait2   subs             r1, #1      ;; temps allumé
  456 00000220 D1FD            bne              wait2
  457 00000222         
  458 00000222 603A            str              r2, [r7]    ;; Eteint LED car r
                                                            2 = 0x00
  459 00000224 F8CC 2000       str              r2, [r12]
  460 00000228 4931            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  461 0000022A         
  462 0000022A 3901    wait10  subs             r1, #1      ;; temps éteint
  463 0000022C D1FD            bne              wait10
  464 0000022E         
  465 0000022E E7E8            b                blinkDist   ;; boucle
  466 00000230         fin
  467 00000230 4770            bx               lr          ;; retourne sur le 
                                                            code principal
  468 00000232         
  469 00000232         
  470 00000232         
  471 00000232         ;; TIMER A ( abandonner)
  472 00000232         Reset_Handlerone
  473 00000232         ; Pour le Stellaris LM3S8992, cela pourrait être, par ex
                       emple, 0x40030000
  474 00000232         ; Activation de l'horloge pour le GPTM (General Purpose 
                       Timer Module)
  475 00000232         
  476 00000232         
  477 00000232         
  478 00000232         ; Activation de l'horloge pour le TIMER0 en mode normal
  479 00000232 F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0



ARM Macro Assembler    Page 14 


  480 00000236 4A2F            LDR              R2, =0x400FE104 ; Adresse du re
                                                            gistre RCGC1
  481 00000238 6011            STR              R1, [R2]    ; Écrire dans RCGC1
                                                             pour activer l'hor
                                                            loge de TIMER0
  482 0000023A         
  483 0000023A         ; Activation de l'horloge pour le TIMER0 en mode sommeil
                       
  484 0000023A F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  485 0000023E 4A2E            LDR              R2, =0x400FE114 ; Adresse du re
                                                            gistre SCGC1
  486 00000240 6011            STR              R1, [R2]    ; Écrire dans SCGC1
                                                             pour activer l'hor
                                                            loge de TIMER0
  487 00000242         
  488 00000242         ; Activation de l'horloge pour le TIMER0 en mode sommeil
                        profond
  489 00000242 F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  490 00000246 4A2D            LDR              R2, =0x400FE124 ; Adresse du re
                                                            gistre DCGC1
  491 00000248 6011            STR              R1, [R2]    ; Écrire dans DCGC1
                                                             pour activer l'hor
                                                            loge de TIMER0
  492 0000024A         
  493 0000024A         ; Réinitialisation logicielle de TIMER0 si nécessaire
  494 0000024A F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  495 0000024E 4A2C            LDR              R2, =0x400FE044 ; Adresse du re
                                                            gistre SRCR1
  496 00000250 6011            STR              R1, [R2]    ; Réinitialisation 
                                                            logicielle de TIMER
                                                            0
  497 00000252 BF00            NOP                          ; Insérer un délai 
                                                            si nécessaire
  498 00000254 F04F 0100       LDR              R1, =0x0    ; Valeur pour effac
                                                            er le bit de réinit
                                                            ialisation
  499 00000258 6011            STR              R1, [R2]    ; Effacer la réinit
                                                            ialisation logiciel
                                                            le de TIMER0
  500 0000025A         
  501 0000025A         
  502 0000025A         
  503 0000025A         ; Configuration du mode du timer
  504 0000025A 482A            LDR              R0, =0x40030000 ; Pas nécessair
                                                            e, R0 est déjà char
                                                            gé avec cette valeu
                                                            r
  505 0000025C F04F 0104       LDR              R1, =0x4    ; R1 = 1 (pour le m
                                                            ode RTC)
  506 00000260 6001            STR              R1, [R0, #0x000] ; Écrit 1 dans
                                                             GPTMCFG pour confi
                                                            gurer le mode RTC
  507 00000262         
  508 00000262         ; Activation du timer
  509 00000262 4828            LDR              R0, =0x40030000 ; Pas nécessair
                                                            e, R0 est déjà char



ARM Macro Assembler    Page 15 


                                                            gé avec cette valeu
                                                            r
  510 00000264 F04F 0101       LDR              R1, =0x1    ; R1 = 1 (pour acti
                                                            ver le timer)
  511 00000268 60C1            STR              R1, [R0, #0x00C] ; Écrit 1 dans
                                                             GPTMCTL pour activ
                                                            er le timer
  512 0000026A         
  513 0000026A         ; Fin du gestionnaire de réinitialisation, retourne au p
                       rogramme principal
  514 0000026A 4770            BX               LR
  515 0000026C         ;;;
  516 0000026C         
  517 0000026C                 END
              400FE100 
              400FE108 
              4000752C 
              4002752C 
              40007420 
              40027420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 
              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 
              40007500 
              4000751C 
              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40028008 
              40007008 
              400FE060 
              E000E014 
              00F423FF 
              E000E018 
              E000E010 
              002FFFFF 
              400FE104 
              400FE114 
              400FE124 
              400FE044 
              40030000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_config_moteur.d -o.\objects\rk_config_moteur.o -I.\RT
E\_Target_1 -IC:\Users\polom\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core
\Include -IC:\Users\polom\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\AR
MCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --pred
efine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMC



ARM Macro Assembler    Page 16 


M3 SETA 1" --list=.\listings\rk_config_moteur.lst RK_Config_Moteur.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 92 in file RK_Config_Moteur.s
   Uses
      None
Comment: .text unused
DISTANCE 000001D8

Symbol: DISTANCE
   Definitions
      At line 416 in file RK_Config_Moteur.s
   Uses
      At line 110 in file RK_Config_Moteur.s
Comment: DISTANCE used once
FREEZE_TIMER 000001B8

Symbol: FREEZE_TIMER
   Definitions
      At line 402 in file RK_Config_Moteur.s
   Uses
      At line 111 in file RK_Config_Moteur.s
Comment: FREEZE_TIMER used once
INIT_TIMER 00000174

Symbol: INIT_TIMER
   Definitions
      At line 363 in file RK_Config_Moteur.s
   Uses
      At line 109 in file RK_Config_Moteur.s
Comment: INIT_TIMER used once
MOTEUR_DROIT_ARRIERE 00000134

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 319 in file RK_Config_Moteur.s
   Uses
      At line 100 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 0000013E

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 326 in file RK_Config_Moteur.s
   Uses
      At line 99 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 0000015C

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 347 in file RK_Config_Moteur.s
   Uses
      At line 101 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_INVERSE used once
MOTEUR_DROIT_OFF 00000110

Symbol: MOTEUR_DROIT_OFF



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 298 in file RK_Config_Moteur.s
   Uses
      At line 98 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000104

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 290 in file RK_Config_Moteur.s
   Uses
      At line 97 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000148

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 333 in file RK_Config_Moteur.s
   Uses
      At line 105 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000152

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 340 in file RK_Config_Moteur.s
   Uses
      At line 104 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000168

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 355 in file RK_Config_Moteur.s
   Uses
      At line 106 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_INVERSE used once
MOTEUR_GAUCHE_OFF 00000128

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 312 in file RK_Config_Moteur.s
   Uses
      At line 103 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 0000011C

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 305 in file RK_Config_Moteur.s
   Uses
      At line 102 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 116 in file RK_Config_Moteur.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 96 in file RK_Config_Moteur.s
Comment: MOTEUR_INIT used once
RESET_TIMER 000001A8

Symbol: RESET_TIMER
   Definitions
      At line 395 in file RK_Config_Moteur.s
   Uses
      At line 108 in file RK_Config_Moteur.s
Comment: RESET_TIMER used once
Reset_Handlerone 00000232

Symbol: Reset_Handlerone
   Definitions
      At line 472 in file RK_Config_Moteur.s
   Uses
      At line 107 in file RK_Config_Moteur.s
Comment: Reset_Handlerone used once
UNFREEZE_TIMER 000001C8

Symbol: UNFREEZE_TIMER
   Definitions
      At line 409 in file RK_Config_Moteur.s
   Uses
      At line 112 in file RK_Config_Moteur.s
Comment: UNFREEZE_TIMER used once
blinkDist 00000202

Symbol: blinkDist
   Definitions
      At line 438 in file RK_Config_Moteur.s
   Uses
      At line 465 in file RK_Config_Moteur.s
Comment: blinkDist used once
dizaine 000001F0

Symbol: dizaine
   Definitions
      At line 428 in file RK_Config_Moteur.s
   Uses
      At line 433 in file RK_Config_Moteur.s
Comment: dizaine used once
fin 00000230

Symbol: fin
   Definitions
      At line 466 in file RK_Config_Moteur.s
   Uses
      At line 450 in file RK_Config_Moteur.s
Comment: fin used once
finDizaine 00000200

Symbol: finDizaine
   Definitions
      At line 435 in file RK_Config_Moteur.s
   Uses
      At line 430 in file RK_Config_Moteur.s
Comment: finDizaine used once
led2 00000212



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: led2
   Definitions
      At line 448 in file RK_Config_Moteur.s
   Uses
      At line 442 in file RK_Config_Moteur.s
Comment: led2 used once
wait10 0000022A

Symbol: wait10
   Definitions
      At line 462 in file RK_Config_Moteur.s
   Uses
      At line 463 in file RK_Config_Moteur.s
Comment: wait10 used once
wait2 0000021E

Symbol: wait2
   Definitions
      At line 455 in file RK_Config_Moteur.s
   Uses
      At line 446 in file RK_Config_Moteur.s
      At line 456 in file RK_Config_Moteur.s

25 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 83 in file RK_Config_Moteur.s
   Uses
      At line 444 in file RK_Config_Moteur.s
      At line 452 in file RK_Config_Moteur.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 90 in file RK_Config_Moteur.s
   Uses
      At line 439 in file RK_Config_Moteur.s
      At line 460 in file RK_Config_Moteur.s

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 31 in file RK_Config_Moteur.s
   Uses
      At line 158 in file RK_Config_Moteur.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 39 in file RK_Config_Moteur.s
   Uses
      At line 165 in file RK_Config_Moteur.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 26 in file RK_Config_Moteur.s
   Uses
      At line 264 in file RK_Config_Moteur.s
      At line 321 in file RK_Config_Moteur.s
      At line 328 in file RK_Config_Moteur.s
      At line 349 in file RK_Config_Moteur.s

GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 34 in file RK_Config_Moteur.s
   Uses
      At line 281 in file RK_Config_Moteur.s
      At line 335 in file RK_Config_Moteur.s
      At line 342 in file RK_Config_Moteur.s
      At line 357 in file RK_Config_Moteur.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 29 in file RK_Config_Moteur.s
   Uses
      At line 259 in file RK_Config_Moteur.s
Comment: GPIODEN_D used once
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 37 in file RK_Config_Moteur.s
   Uses
      At line 277 in file RK_Config_Moteur.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 27 in file RK_Config_Moteur.s
   Uses
      At line 249 in file RK_Config_Moteur.s
Comment: GPIODIR_D used once
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 35 in file RK_Config_Moteur.s
   Uses
      At line 269 in file RK_Config_Moteur.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 28 in file RK_Config_Moteur.s
   Uses
      At line 254 in file RK_Config_Moteur.s
Comment: GPIODR2R_D used once
GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 36 in file RK_Config_Moteur.s
   Uses
      At line 273 in file RK_Config_Moteur.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 30 in file RK_Config_Moteur.s
   Uses
      At line 144 in file RK_Config_Moteur.s
Comment: GPIOPCTL_D used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 38 in file RK_Config_Moteur.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 152 in file RK_Config_Moteur.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 15 in file RK_Config_Moteur.s
   Uses
      At line 251 in file RK_Config_Moteur.s
      At line 256 in file RK_Config_Moteur.s
      At line 261 in file RK_Config_Moteur.s
      At line 264 in file RK_Config_Moteur.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 16 in file RK_Config_Moteur.s
   Uses
      At line 251 in file RK_Config_Moteur.s
      At line 256 in file RK_Config_Moteur.s
      At line 261 in file RK_Config_Moteur.s
      At line 264 in file RK_Config_Moteur.s
      At line 281 in file RK_Config_Moteur.s
      At line 321 in file RK_Config_Moteur.s
      At line 328 in file RK_Config_Moteur.s
      At line 335 in file RK_Config_Moteur.s
      At line 342 in file RK_Config_Moteur.s
      At line 349 in file RK_Config_Moteur.s
      At line 351 in file RK_Config_Moteur.s
      At line 357 in file RK_Config_Moteur.s
      At line 359 in file RK_Config_Moteur.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 17 in file RK_Config_Moteur.s
   Uses
      At line 251 in file RK_Config_Moteur.s
      At line 256 in file RK_Config_Moteur.s
      At line 261 in file RK_Config_Moteur.s
      At line 264 in file RK_Config_Moteur.s
      At line 265 in file RK_Config_Moteur.s

GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 18 in file RK_Config_Moteur.s
   Uses
      At line 251 in file RK_Config_Moteur.s
      At line 256 in file RK_Config_Moteur.s
      At line 261 in file RK_Config_Moteur.s
      At line 264 in file RK_Config_Moteur.s
      At line 265 in file RK_Config_Moteur.s

GPTMCFG 40030000




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: GPTMCFG
   Definitions
      At line 80 in file RK_Config_Moteur.s
   Uses
      None
Comment: GPTMCFG unused
GPTMCTL 4003000C

Symbol: GPTMCTL
   Definitions
      At line 79 in file RK_Config_Moteur.s
   Uses
      None
Comment: GPTMCTL unused
GPTMTAMATCHR 40030030

Symbol: GPTMTAMATCHR
   Definitions
      At line 81 in file RK_Config_Moteur.s
   Uses
      None
Comment: GPTMTAMATCHR unused
PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 25 in file RK_Config_Moteur.s
   Uses
      At line 26 in file RK_Config_Moteur.s
      At line 27 in file RK_Config_Moteur.s
      At line 28 in file RK_Config_Moteur.s
      At line 29 in file RK_Config_Moteur.s
      At line 30 in file RK_Config_Moteur.s
      At line 31 in file RK_Config_Moteur.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 33 in file RK_Config_Moteur.s
   Uses
      At line 34 in file RK_Config_Moteur.s
      At line 35 in file RK_Config_Moteur.s
      At line 36 in file RK_Config_Moteur.s
      At line 37 in file RK_Config_Moteur.s
      At line 38 in file RK_Config_Moteur.s
      At line 39 in file RK_Config_Moteur.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 48 in file RK_Config_Moteur.s
   Uses
      At line 193 in file RK_Config_Moteur.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 49 in file RK_Config_Moteur.s
   Uses
      At line 197 in file RK_Config_Moteur.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 46 in file RK_Config_Moteur.s
   Uses
      At line 173 in file RK_Config_Moteur.s
      At line 202 in file RK_Config_Moteur.s

PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions
      At line 50 in file RK_Config_Moteur.s
   Uses
      At line 177 in file RK_Config_Moteur.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 51 in file RK_Config_Moteur.s
   Uses
      At line 182 in file RK_Config_Moteur.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 47 in file RK_Config_Moteur.s
   Uses
      At line 189 in file RK_Config_Moteur.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 56 in file RK_Config_Moteur.s
   Uses
      At line 232 in file RK_Config_Moteur.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 57 in file RK_Config_Moteur.s
   Uses
      At line 236 in file RK_Config_Moteur.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 54 in file RK_Config_Moteur.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 210 in file RK_Config_Moteur.s
      At line 241 in file RK_Config_Moteur.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions
      At line 58 in file RK_Config_Moteur.s
   Uses
      At line 214 in file RK_Config_Moteur.s
Comment: PWM1GENA used once
PWM1GENB 400280A4

Symbol: PWM1GENB
   Definitions
      At line 59 in file RK_Config_Moteur.s
   Uses
      At line 220 in file RK_Config_Moteur.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 55 in file RK_Config_Moteur.s
   Uses
      At line 228 in file RK_Config_Moteur.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 43 in file RK_Config_Moteur.s
   Uses
      At line 292 in file RK_Config_Moteur.s
      At line 299 in file RK_Config_Moteur.s
      At line 306 in file RK_Config_Moteur.s
      At line 313 in file RK_Config_Moteur.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 42 in file RK_Config_Moteur.s
   Uses
      At line 43 in file RK_Config_Moteur.s
      At line 46 in file RK_Config_Moteur.s
      At line 47 in file RK_Config_Moteur.s
      At line 48 in file RK_Config_Moteur.s
      At line 49 in file RK_Config_Moteur.s
      At line 50 in file RK_Config_Moteur.s
      At line 51 in file RK_Config_Moteur.s
      At line 54 in file RK_Config_Moteur.s
      At line 55 in file RK_Config_Moteur.s
      At line 56 in file RK_Config_Moteur.s
      At line 57 in file RK_Config_Moteur.s
      At line 58 in file RK_Config_Moteur.s
      At line 59 in file RK_Config_Moteur.s




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

RCC 400FE060

Symbol: RCC
   Definitions
      At line 62 in file RK_Config_Moteur.s
   Uses
      At line 365 in file RK_Config_Moteur.s
Comment: RCC used once
RCC2 400FE070

Symbol: RCC2
   Definitions
      At line 63 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC2 unused
RCC2_DIV400 40000000

Symbol: RCC2_DIV400
   Definitions
      At line 69 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC2_DIV400 unused
RCC_OSCSRC 00000030

Symbol: RCC_OSCSRC
   Definitions
      At line 66 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_OSCSRC unused
RCC_OSCSRC_MAIN 00000000

Symbol: RCC_OSCSRC_MAIN
   Definitions
      At line 67 in file RK_Config_Moteur.s
   Uses
      At line 368 in file RK_Config_Moteur.s
Comment: RCC_OSCSRC_MAIN used once
RCC_PWRDN 00002000

Symbol: RCC_PWRDN
   Definitions
      At line 68 in file RK_Config_Moteur.s
   Uses
      At line 370 in file RK_Config_Moteur.s
Comment: RCC_PWRDN used once
RCC_SYSDIV 07800000

Symbol: RCC_SYSDIV
   Definitions
      At line 70 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_SYSDIV unused
RCC_SYSDIV2 1F800000

Symbol: RCC_SYSDIV2



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 71 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_SYSDIV2 unused
RCC_XTAL 000007C0

Symbol: RCC_XTAL
   Definitions
      At line 64 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_XTAL unused
RCC_XTAL_16MHZ 00000540

Symbol: RCC_XTAL_16MHZ
   Definitions
      At line 65 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_XTAL_16MHZ unused
STCTRL E000E010

Symbol: STCTRL
   Definitions
      At line 76 in file RK_Config_Moteur.s
   Uses
      None
Comment: STCTRL unused
STCURRENT E000E018

Symbol: STCURRENT
   Definitions
      At line 75 in file RK_Config_Moteur.s
   Uses
      At line 396 in file RK_Config_Moteur.s
Comment: STCURRENT used once
STRELOAD E000E014

Symbol: STRELOAD
   Definitions
      At line 77 in file RK_Config_Moteur.s
   Uses
      None
Comment: STRELOAD unused
SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 21 in file RK_Config_Moteur.s
   Uses
      At line 117 in file RK_Config_Moteur.s
Comment: SYSCTL_RCGC0 used once
SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 22 in file RK_Config_Moteur.s
   Uses



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols

      At line 127 in file RK_Config_Moteur.s
      At line 133 in file RK_Config_Moteur.s

VITESSE 000001A2

Symbol: VITESSE
   Definitions
      At line 87 in file RK_Config_Moteur.s
   Uses
      At line 194 in file RK_Config_Moteur.s
      At line 233 in file RK_Config_Moteur.s

53 symbols
415 symbols in table




ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument); 
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (configure les pwms + GPIO)
    3 00000000         
    4 00000000         ;Les pages se réfèrent au datasheet lm3s9b92.pdf
    5 00000000         
    6 00000000         ;Cablage :
    7 00000000         ;pin 10/PD0/PWM0 => input PWM du pont en H DRV8801RT
    8 00000000         ;pin 11/PD1/PWM1 => input Phase_R  du pont en H DRV8801R
                       T
    9 00000000         ;pin 12/PD2   => input SlowDecay commune aux 2 ponts en 
                       H
   10 00000000         ;pin 98/PD5   => input Enable 12v du conv DC/DC 
   11 00000000         ;pin 86/PH0/PWM2 => input PWM du 2nd pont en H
   12 00000000         ;pin 85/PH1/PWM3 => input Phase du 2nd pont en H 
   13 00000000         
   14 00000000         ;; Hexa corresponding values to pin numbers
   15 00000000 00000001 
                       GPIO_0  EQU              0x1
   16 00000000 00000002 
                       GPIO_1  EQU              0x2
   17 00000000 00000004 
                       GPIO_2  EQU              0x4
   18 00000000 00000020 
                       GPIO_5  EQU              0x20
   19 00000000         
   20 00000000         ;; pour enable clock    0x400FE000
   21 00000000 400FE100 
                       SYSCTL_RCGC0
                               EQU              0x400FE100  ;SYSCTL_RCGC0: offs
                                                            et 0x100 (p271 data
                                                            sheet de lm3s9b92.p
                                                            df)
   22 00000000 400FE108 
                       SYSCTL_RCGC2
                               EQU              0x400FE108  ;SYSCTL_RCGC2: offs
                                                            et 0x108 (p291 data
                                                            sheet de lm3s9b92.p
                                                            df)
   23 00000000         
   24 00000000         ;; General-Purpose Input/Outputs (GPIO) configuration
   25 00000000 40007000 
                       PORTD_BASE
                               EQU              0x40007000
   26 00000000 40007000 
                       GPIODATA_D
                               EQU              PORTD_BASE
   27 00000000 40007400 
                       GPIODIR_D
                               EQU              PORTD_BASE+0x00000400
   28 00000000 40007500 
                       GPIODR2R_D
                               EQU              PORTD_BASE+0x00000500
   29 00000000 4000751C 
                       GPIODEN_D
                               EQU              PORTD_BASE+0x0000051C
   30 00000000 4000752C 
                       GPIOPCTL_D
                               EQU              PORTD_BASE+0x0000052C ; GPIO Po



ARM Macro Assembler    Page 2 


                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   31 00000000 40007420 
                       GPIOAFSEL_D
                               EQU              PORTD_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   32 00000000         
   33 00000000 40027000 
                       PORTH_BASE
                               EQU              0x40027000
   34 00000000 40027000 
                       GPIODATA_H
                               EQU              PORTH_BASE
   35 00000000 40027400 
                       GPIODIR_H
                               EQU              PORTH_BASE+0x00000400
   36 00000000 40027500 
                       GPIODR2R_H
                               EQU              PORTH_BASE+0x00000500
   37 00000000 4002751C 
                       GPIODEN_H
                               EQU              PORTH_BASE+0x0000051C
   38 00000000 4002752C 
                       GPIOPCTL_H
                               EQU              PORTH_BASE+0x0000052C ; GPIO Po
                                                            rt Control (GPIOPCT
                                                            L), offset 0x52C; p
                                                            444
   39 00000000 40027420 
                       GPIOAFSEL_H
                               EQU              PORTH_BASE+0x00000420 ; GPIO Al
                                                            ternate Function Se
                                                            lect (GPIOAFSEL), o
                                                            ffset 0x420; p426
   40 00000000         
   41 00000000         ;; Pulse Width Modulator (PWM) configuration
   42 00000000 40028000 
                       PWM_BASE
                               EQU              0x040028000 ;BASE des Block PWM
                                                             p.1138
   43 00000000 40028008 
                       PWMENABLE
                               EQU              PWM_BASE+0x008 ; p1145
   44 00000000         
   45 00000000         ;Block PWM0 pour sorties PWM0 et PWM1 (moteur 1)
   46 00000000 40028040 
                       PWM0CTL EQU              PWM_BASE+0x040 ;p1167
   47 00000000 40028050 
                       PWM0LOAD
                               EQU              PWM_BASE+0x050
   48 00000000 40028058 
                       PWM0CMPA
                               EQU              PWM_BASE+0x058
   49 00000000 4002805C 
                       PWM0CMPB
                               EQU              PWM_BASE+0x05C



ARM Macro Assembler    Page 3 


   50 00000000 40028060 
                       PWM0GENA
                               EQU              PWM_BASE+0x060
   51 00000000 40028064 
                       PWM0GENB
                               EQU              PWM_BASE+0x064
   52 00000000         
   53 00000000         ;Block PWM1 pour sorties PWM1 et PWM2 (moteur 2)
   54 00000000 40028080 
                       PWM1CTL EQU              PWM_BASE+0x080
   55 00000000 40028090 
                       PWM1LOAD
                               EQU              PWM_BASE+0x090
   56 00000000 40028098 
                       PWM1CMPA
                               EQU              PWM_BASE+0x098
   57 00000000 4002809C 
                       PWM1CMPB
                               EQU              PWM_BASE+0x09C
   58 00000000 400280A0 
                       PWM1GENA
                               EQU              PWM_BASE+0x0A0
   59 00000000 400280A4 
                       PWM1GENB
                               EQU              PWM_BASE+0x0A4
   60 00000000         
   61 00000000         
   62 00000000 400FE060 
                       RCC     EQU              0x400FE060  ; Adresse du regist
                                                            re RCC
   63 00000000 400FE070 
                       RCC2    EQU              0x400FE070  ; Adresse du regist
                                                            re RCC2 (si utilisé
                                                            )
   64 00000000 000007C0 
                       RCC_XTAL
                               EQU              0x000007C0  ; Masque pour le ch
                                                            amp XTAL dans RCC
   65 00000000 00000540 
                       RCC_XTAL_16MHZ
                               EQU              0x00000540  ; Valeur pour un cr
                                                            istal de 16 MHz
   66 00000000 00000030 
                       RCC_OSCSRC
                               EQU              0x00000030  ; Masque pour le ch
                                                            amp OSCSRC dans RCC
                                                            
   67 00000000 00000000 
                       RCC_OSCSRC_MAIN
                               EQU              0x00000000  ; Utiliser l'oscill
                                                            ateur principal
   68 00000000 00002000 
                       RCC_PWRDN
                               EQU              0x00002000  ; Bit de mise hors 
                                                            tension du PLL
   69 00000000 40000000 
                       RCC2_DIV400
                               EQU              0x40000000  ; Utiliser le divis
                                                            eur 400 dans RCC2



ARM Macro Assembler    Page 4 


   70 00000000 07800000 
                       RCC_SYSDIV
                               EQU              0x07800000  ; Masque pour le ch
                                                            amp SYSDIV dans RCC
                                                            
   71 00000000 1F800000 
                       RCC_SYSDIV2
                               EQU              0x1F800000  ; Masque pour le ch
                                                            amp SYSDIV2 dans RC
                                                            C2
   72 00000000         
   73 00000000 4003000C 
                       GPTMCTL EQU              0x40030000+0x00C
   74 00000000 40030000 
                       GPTMCFG EQU              0x40030000
   75 00000000 40030030 
                       GPTMTAMATCHR
                               EQU              0x40030000+0x030
   76 00000000         ; Broches select
   77 00000000 00000030 
                       BROCHE4_5
                               EQU              0x30        ; led1 & led2 sur b
                                                            roche 4 et 5
   78 00000000         
   79 00000000         
   80 00000000         
   81 00000000 000001A2 
                       VITESSE EQU              0x1A2       ; Valeures plus pet
                                                            ites => Vitesse plu
                                                            s rapide exemple 0x
                                                            192
   82 00000000         ; Valeures plus grandes => Vitesse moins rapide exemple 
                       0x1B2
   83 00000000         
   84 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF
   85 00000000         
   86 00000000                 AREA             |.text|, CODE, READONLY
   87 00000000                 ENTRY
   88 00000000         
   89 00000000         ;; The EXPORT command specifies that a symbol can be acc
                       essed by other shared objects or executables.
   90 00000000                 EXPORT           MOTEUR_INIT
   91 00000000                 EXPORT           MOTEUR_DROIT_ON
   92 00000000                 EXPORT           MOTEUR_DROIT_OFF
   93 00000000                 EXPORT           MOTEUR_DROIT_AVANT
   94 00000000                 EXPORT           MOTEUR_DROIT_ARRIERE
   95 00000000                 EXPORT           MOTEUR_DROIT_INVERSE
   96 00000000                 EXPORT           MOTEUR_GAUCHE_ON
   97 00000000                 EXPORT           MOTEUR_GAUCHE_OFF
   98 00000000                 EXPORT           MOTEUR_GAUCHE_AVANT
   99 00000000                 EXPORT           MOTEUR_GAUCHE_ARRIERE
  100 00000000                 EXPORT           MOTEUR_GAUCHE_INVERSE
  101 00000000                 EXPORT           Reset_Handlerone
  102 00000000                 EXPORT           DISTANCE
  103 00000000         
  104 00000000         
  105 00000000         
  106 00000000         MOTEUR_INIT



ARM Macro Assembler    Page 5 


  107 00000000 4E81            ldr              r6, = SYSCTL_RCGC0
  108 00000002 6830            ldr              r0, [R6]
  109 00000004 F440 1080       ORR              r0, r0, #0x00100000 ;;bit 20 = 
                                                            PWM recoit clock: O
                                                            N (p271) 
  110 00000008 6030            str              r0, [r6]
  111 0000000A         
  112 0000000A         ;ROM_SysCtlPWMClockSet(SYSCTL_PWMDIV_1);PWM clock is pro
                       cessor clock /1
  113 0000000A         ;Je ne fais rien car par defaut = OK!!
  114 0000000A         ;*(int *) (0x400FE060)= *(int *)(0x400FE060)...;
  115 0000000A         
  116 0000000A         ;RCGC2 :  Enable port D GPIO(p291 ) car Moteur Droit sur
                        port D 
  117 0000000A 4E80            ldr              r6, = SYSCTL_RCGC2
  118 0000000C 6830            ldr              r0, [R6]
  119 0000000E F040 0008       ORR              r0, r0, #0x08 ;; Enable port D 
                                                            GPIO 
  120 00000012 6030            str              r0, [r6]
  121 00000014         
  122 00000014         ;MOT2 : RCGC2 :  Enable port H GPIO  (2eme moteurs)
  123 00000014 4E7D            ldr              r6, = SYSCTL_RCGC2
  124 00000016 6830            ldr              r0, [R6]
  125 00000018 F040 0080       ORR              r0, r0, #0x80 ;; Enable port H 
                                                            GPIO 
  126 0000001C 6030            str              r0, [r6]
  127 0000001E         
  128 0000001E BF00            nop
  129 00000020 BF00            nop
  130 00000022 BF00            nop
  131 00000024         
  132 00000024         ;;Pin muxing pour PWM, port D, reg. GPIOPCTL(p444), 4bit
                       s de PCM0=0001<=>PWM (voir p1261)
  133 00000024         ;;il faut mettre 1 pour avoir PD0=PWM0 et PD1=PWM1
  134 00000024 4E7A            ldr              r6, = GPIOPCTL_D
  135 00000026         ;ldr r0, [R6]   ;; *(int *)(0x40007000+0x0000052C)=1;
  136 00000026         ;ORR r0, r0, #0x01 ;; Port D, pin 1 = PWM 
  137 00000026 F04F 0001       mov              r0, #0x01
  138 0000002A 6030            str              r0, [r6]
  139 0000002C         
  140 0000002C         ;;MOT2 : Pin muxing pour PWM, port H, reg. GPIOPCTL(p444
                       ), 4bits de PCM0=0001<=>PWM (voir p1261)
  141 0000002C         ;;il faut mettre mux = 2 pour avoir PH0=PWM2 et PH1=PWM3
                       
  142 0000002C 4E79            ldr              r6, = GPIOPCTL_H
  143 0000002E F04F 0002       mov              r0, #0x02
  144 00000032 6030            str              r0, [r6]
  145 00000034         
  146 00000034         ;;Alternate Function Select (p 426), PD0 utilise alernat
                       e fonction (PWM au dessus)
  147 00000034         ;;donc PD0 = 1
  148 00000034 4E78            ldr              r6, = GPIOAFSEL_D
  149 00000036 6830            ldr              r0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  150 00000038 F040 0001       ORR              r0, r0, #0x01 ;
  151 0000003C 6030            str              r0, [r6]



ARM Macro Assembler    Page 6 


  152 0000003E         
  153 0000003E         ;;MOT2 : Alternate Function Select (p 426), PH0 utilise 
                       PWM donc Alternate funct
  154 0000003E         ;;donc PH0 = 1
  155 0000003E 4E77            ldr              r6, = GPIOAFSEL_H
  156 00000040 6830            ldr              r0, [R6]    ;*(int *)(0x4000700
                                                            0+0x00000420)= *(in
                                                            t *)(0x40007000+0x0
                                                            0000420) | 0x000000
                                                            01;
  157 00000042 F040 0001       ORR              r0, r0, #0x01 ;
  158 00000046 6030            str              r0, [r6]
  159 00000048         
  160 00000048         ;;-----------PWM0 pour moteur 1 connecté à PD0
  161 00000048         ;;PWM0 produit PWM0 et PWM1 output
  162 00000048         ;;Config Modes PWM0 + mode GenA + mode GenB
  163 00000048 4E75            ldr              r6, = PWM0CTL
  164 0000004A F04F 0002       mov              r0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  165 0000004E 6030            str              r0, [r6]
  166 00000050         
  167 00000050 4E74            ldr              r6, =PWM0GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  168 00000052         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  169 00000052 F04F 00B0       mov              r0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  170 00000056 6030            str              r0, [r6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00  
  171 00000058         
  172 00000058 4E73            ldr              r6, =PWM0GENB ;en comptage croi
                                                            ssant, qd comparate
                                                            urB = compteur => s
                                                            ortie pwmA=1
  173 0000005A F44F 6030       mov              r0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  174 0000005E 6030            str              r0, [r6]
  175 00000060         ;Config Compteur, comparateur A et comparateur B
  176 00000060         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  177 00000060         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8, 
  178 00000060         ;;on divise par 2 car moteur 6v sur alim 12v
  179 00000060 4E72            ldr              r6, =PWM0LOAD ;PWM0LOAD=periode
                                                            /2 =0x1F4
  180 00000062 F44F 70FA       mov              r0, #0x1F4
  181 00000066 6030            str              r0,[r6]
  182 00000068         
  183 00000068 4E71            ldr              r6, =PWM0CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400



ARM Macro Assembler    Page 7 


  184 0000006A F44F 70D1       mov              r0, #VITESSE
  185 0000006E 6030            str              r0, [r6]
  186 00000070         
  187 00000070 4E70            ldr              r6, =PWM0CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (rappo
                                                            rt cyclique depend 
                                                            de CMPA)
  188 00000072 F44F 70FA       mov              r0, #0x1F4
  189 00000076 6030            str              r0, [r6]
  190 00000078         
  191 00000078         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  192 00000078 4E69            ldr              r6, =PWM0CTL
  193 0000007A 6830            ldr              r0, [r6]
  194 0000007C F040 0007       ORR              r0, r0, #0x07
  195 00000080 6030            str              r0, [r6]
  196 00000082         
  197 00000082         ;;-----------PWM2 pour moteur 2 connecté à PH0
  198 00000082         ;;PWM1block produit PWM2 et PWM3 output
  199 00000082         ;;Config Modes PWM2 + mode GenA + mode GenB
  200 00000082 4E6D            ldr              r6, = PWM1CTL
  201 00000084 F04F 0002       mov              r0, #2      ;Mode up-down-up-do
                                                            wn, pas synchro
  202 00000088 6030            str              r0, [r6]    ;*(int *)(0x4002800
                                                            0+0x040)=2;
  203 0000008A         
  204 0000008A 4E6C            ldr              r6, =PWM1GENA ;en decomptage, q
                                                            d comparateurA = co
                                                            mpteur => sortie pw
                                                            mA=0
  205 0000008C         ;en comptage croissant, qd comparateurA = compteur => so
                       rtie pwmA=1
  206 0000008C F04F 00B0       mov              r0, #0x0B0  ;0B0=10110000 => AC
                                                            TCMPBD=00 (B down:r
                                                            ien), ACTCMPBU=00(B
                                                             up rien)
  207 00000090 6030            str              r0, [r6]    ;ACTCMPAD=10 (A dow
                                                            n:pwmA low), ACTCMP
                                                            AU=11 (A up:pwmA hi
                                                            gh) , ACTLOAD=00,AC
                                                            TZERO=00  
  208 00000092         
  209 00000092         ;*(int *)(0x40028000+0x060)=0x0B0; //
  210 00000092 4E6B            ldr              r6, =PWM1GENB ;*(int *)(0x40028
                                                            000+0x064)=0x0B00;
  211 00000094 F44F 6030       mov              r0, #0x0B00 ;en decomptage, qd 
                                                            comparateurB = comp
                                                            teur => sortie pwmB
                                                            =0
  212 00000098 6030            str              r0, [r6]    ;en comptage croiss
                                                            ant, qd comparateur
                                                            B = compteur => sor
                                                            tie pwmA=1
  213 0000009A         ;Config Compteur, comparateur A et comparateur B
  214 0000009A         ;;#define PWM_PERIOD (ROM_SysCtlClockGet() / 16000),
  215 0000009A         ;;en mesure : SysCtlClockGet=0F42400h, /16=0x3E8, 
  216 0000009A         ;;on divise par 2 car moteur 6v sur alim 12v
  217 0000009A         ;*(int *)(0x40028000+0x050)=0x1F4; //PWM0LOAD=periode/2 
                       =0x1F4



ARM Macro Assembler    Page 8 


  218 0000009A 4E6A            ldr              r6, =PWM1LOAD
  219 0000009C F44F 70FA       mov              r0, #0x1F4
  220 000000A0 6030            str              r0,[r6]
  221 000000A2         
  222 000000A2 4E69            ldr              r6, =PWM1CMPA ;Valeur rapport c
                                                            yclique : pour 10% 
                                                            => 1C2h si clock = 
                                                            0F42400
  223 000000A4 F44F 70D1       mov              r0, #VITESSE
  224 000000A8 6030            str              r0, [r6]    ;*(int *)(0x4002800
                                                            0+0x058)=0x01C2;
  225 000000AA         
  226 000000AA 4E68            ldr              r6, =PWM1CMPB ;PWM0CMPB recoit 
                                                            meme valeur. (CMPA 
                                                            depend du rapport c
                                                            yclique)
  227 000000AC F44F 70FA       mov              r0, #0x1F4  ; *(int *)(0x400280
                                                            00+0x05C)=0x1F4; 
  228 000000B0 6030            str              r0, [r6]
  229 000000B2         
  230 000000B2         ;Control PWM : active PWM Generator 0 (p1167): Enable+up
                       /down + Enable counter debug mod
  231 000000B2 4E61            ldr              r6, =PWM1CTL
  232 000000B4 6830            ldr              r0, [r6]    ;*(int *) (0x400280
                                                            00+0x40)= *(int *)(
                                                            0x40028000+0x40) | 
                                                            0x07;
  233 000000B6 F040 0007       ORR              r0, r0, #0x07
  234 000000BA 6030            str              r0, [r6]
  235 000000BC         
  236 000000BC         ;;-----Fin config des PWMs   
  237 000000BC         
  238 000000BC         ;PORT D OUTPUT pin0 (pwm)=pin1(direction)=pin2(slow deca
                       y)=pin5(12v enable)
  239 000000BC 4E64            ldr              r6, =GPIODIR_D
  240 000000BE 6830            ldr              r0, [r6]
  241 000000C0 F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  242 000000C4 6030            str              r0,[r6]
  243 000000C6         ;Port D, 2mA les meme
  244 000000C6 4E63            ldr              r6, =GPIODR2R_D ; 
  245 000000C8 6830            ldr              r0, [r6]
  246 000000CA F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  247 000000CE 6030            str              r0,[r6]
  248 000000D0         ;Port D, Digital Enable
  249 000000D0 4E61            ldr              r6, =GPIODEN_D ;
  250 000000D2 6830            ldr              r0, [r6]
  251 000000D4 F040 0027       ORR              r0, #(GPIO_0+GPIO_1+GPIO_2+GPIO
_5)
  252 000000D8 6030            str              r0,[r6]
  253 000000DA         ;Port D : mise à 1 de slow Decay et 12V et mise à 0 pour
                        dir et pwm
  254 000000DA 4E60            ldr              r6, =(GPIODATA_D+((GPIO_0+GPIO_
1+GPIO_2+GPIO_5)<<2))
  255 000000DC F04F 0024       mov              r0, #(GPIO_2+GPIO_5) ; #0x24
  256 000000E0 6030            str              r0,[r6]
  257 000000E2         
  258 000000E2         ;MOT2, PH1 pour sens moteur ouput



ARM Macro Assembler    Page 9 


  259 000000E2 4E5F            ldr              r6, =GPIODIR_H
  260 000000E4 F04F 0003       mov              r0, #0x03   ; 
  261 000000E8 6030            str              r0,[r6]
  262 000000EA         ;Port H, 2mA les meme
  263 000000EA 4E5E            ldr              r6, =GPIODR2R_H
  264 000000EC F04F 0003       mov              r0, #0x03
  265 000000F0 6030            str              r0,[r6]
  266 000000F2         ;Port H, Digital Enable
  267 000000F2 4E5D            ldr              r6, =GPIODEN_H
  268 000000F4 F04F 0003       mov              r0, #0x03
  269 000000F8 6030            str              r0,[r6]
  270 000000FA         ;Port H : mise à 1 pour dir 
  271 000000FA 4E5C            ldr              r6, =(GPIODATA_H +(GPIO_1<<2))
  272 000000FC F04F 0002       mov              r0, #0x02
  273 00000100 6030            str              r0,[r6]
  274 00000102         
  275 00000102 4770            BX               LR          ; FIN du sous progr
                                                            amme d'init.
  276 00000104         
  277 00000104         ;Enable PWM0 (bit 0) et PWM2 (bit 2) p1145 
  278 00000104         ;Attention ici c'est les sorties PWM0 et PWM2
  279 00000104         ;qu'on controle, pas les blocks PWM0 et PWM1!!!
  280 00000104         MOTEUR_DROIT_ON
  281 00000104         ;Enable sortie PWM0 (bit 0), p1145 
  282 00000104 4E5A            ldr              r6, =PWMENABLE
  283 00000106 6830            ldr              r0, [r6]
  284 00000108 F040 0001       orr              r0, #0x01   ;bit 0 à 1
  285 0000010C 6030            str              r0, [r6]
  286 0000010E 4770            BX               LR
  287 00000110         
  288 00000110         MOTEUR_DROIT_OFF
  289 00000110 4E57            ldr              r6, =PWMENABLE
  290 00000112 6830            ldr              r0, [r6]
  291 00000114 F000 000E       and              r0, #0x0E   ;bit 0 à 0
  292 00000118 6030            str              r0, [r6]
  293 0000011A 4770            BX               LR
  294 0000011C         
  295 0000011C         MOTEUR_GAUCHE_ON
  296 0000011C 4E54            ldr              r6, =PWMENABLE
  297 0000011E 6830            ldr              r0, [r6]
  298 00000120 F040 0004       orr              r0, #0x04   ;bit 2 à 1
  299 00000124 6030            str              r0, [r6]
  300 00000126 4770            BX               LR
  301 00000128         
  302 00000128         MOTEUR_GAUCHE_OFF
  303 00000128 4E51            ldr              r6, =PWMENABLE
  304 0000012A 6830            ldr              r0, [r6]
  305 0000012C F000 000B       and              r0, #0x0B   ;bit 2 à 0
  306 00000130 6030            str              r0, [r6]
  307 00000132 4770            BX               LR
  308 00000134         
  309 00000134         MOTEUR_DROIT_ARRIERE
  310 00000134         ;Inverse Direction (GPIO_D1)
  311 00000134 4E4F            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  312 00000136 F04F 0000       mov              r0, #0
  313 0000013A 6030            str              r0,[r6]
  314 0000013C 4770            BX               LR
  315 0000013E         
  316 0000013E         MOTEUR_DROIT_AVANT



ARM Macro Assembler    Page 10 


  317 0000013E         ;Inverse Direction (GPIO_D1)
  318 0000013E 4E4D            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  319 00000140 F04F 0002       mov              r0, #2
  320 00000144 6030            str              r0,[r6]
  321 00000146 4770            BX               LR
  322 00000148         
  323 00000148         MOTEUR_GAUCHE_ARRIERE
  324 00000148         ;Inverse Direction (GPIO_D1)
  325 00000148 4E48            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  326 0000014A F04F 0002       mov              r0, #2      ; contraire du mote
                                                            ur Droit
  327 0000014E 6030            str              r0,[r6]
  328 00000150 4770            BX               LR
  329 00000152         
  330 00000152         MOTEUR_GAUCHE_AVANT
  331 00000152         ;Inverse Direction (GPIO_D1)
  332 00000152 4E46            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  333 00000154 F04F 0000       mov              r0, #0
  334 00000158 6030            str              r0,[r6]
  335 0000015A 4770            BX               LR
  336 0000015C         
  337 0000015C         MOTEUR_DROIT_INVERSE
  338 0000015C         ;Inverse Direction (GPIO_D1)
  339 0000015C 4E45            ldr              r6, =(GPIODATA_D+(GPIO_1<<2))
  340 0000015E 6831            ldr              r1, [r6]
  341 00000160 F081 0002       EOR              r0, r1, #GPIO_1
  342 00000164 6030            str              r0,[r6]
  343 00000166 4770            BX               LR
  344 00000168         
  345 00000168         MOTEUR_GAUCHE_INVERSE
  346 00000168         ;Inverse Direction (GPIO_D1)
  347 00000168 4E40            ldr              r6, =(GPIODATA_H+(GPIO_1<<2))
  348 0000016A 6831            ldr              r1, [r6]
  349 0000016C F081 0002       EOR              r0, r1, #GPIO_1
  350 00000170 6030            str              r0,[r6]
  351 00000172 4770            BX               LR
  352 00000174         
  353 00000174         DISTANCE
  354 00000174 F04F 0503       mov              r5, #3
  355 00000178 F04F 0402       mov              r4, #2
  356 0000017C         
  357 0000017C         ; calcule de la distance en centimètre
  358 0000017C FB0B FB05       MUL              r11,r11,r5  ; multipli r11 par 
                                                            3
  359 00000180 FBBB FBF4       udiv             r11, r11,r4 ; divise r11 par 2
  360 00000184 F04F 0500       mov              r5, #0      ; Contient les diza
                                                            ines pour allumer l
                                                            a led2
  361 00000188 F04F 0400       mov              r4, #0      ; Continent les uni
                                                            tés pour allumer la
                                                             led1
  362 0000018C         
  363 0000018C         ; Calcule les dizaines de la distance
  364 0000018C         
  365 0000018C         dizaine
  366 0000018C F1BB 0F0A       cmp              r11, #10    ; compare r11(dista
                                                            nce) avec 10
  367 00000190 D404            bmi              finDizaine  ; r6 < 10 ? finDiza
                                                            ine : continue



ARM Macro Assembler    Page 11 


  368 00000192 F1BB 0B0A       subs             r11, #10    ; soustraire 10 de 
                                                            r6
  369 00000196 F105 0501       add              r5, #1      ; incrémente r5 pou
                                                            r compterle nombre 
                                                            de dizaine
  370 0000019A E7F7            b                dizaine     ; Répéter
  371 0000019C         
  372 0000019C         finDizaine
  373 0000019C 445C            add              r4, r11     ; stock les unités 
                                                            réstantes dans r6
  374 0000019E         
  375 0000019E         blinkDist
  376 0000019E 4936            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e2 (wait2)
  377 000001A0         ; compare les dizaines
  378 000001A0 2D00            cmp              r5, #0      ;; Comapre les diza
                                                            ines(r5) avec 0
  379 000001A2 D004            BEQ              led2        ;;
  380 000001A4 3D01            subs             r5, #1      ;; Retire 1 aux diz
                                                            aines(r5)
  381 000001A6 F04F 0320       ldr              r3,=(BROCHE4_5 & 0x20)
  382 000001AA 603B            str              r3, [r7]    ;; Allume la led 2
  383 000001AC E005            b                wait2
  384 000001AE         ; compare les unités
  385 000001AE         led2
  386 000001AE 2C00            cmp              r4, #0      ;; Compare les unit
                                                            és(r4) avec 0
  387 000001B0 D00C            BEQ              fin         ;; 
  388 000001B2 3C01            subs             r4, #1      ;; Retire 1 aux uni
                                                            tés(r4)
  389 000001B4 F04F 0310       ldr              r3,=(BROCHE4_5 & 0x10)
  390 000001B8 603B            str              r3, [r7]    ;; Allume LED1 port
                                                            F broche 4&5 : 0011
                                                            0000 (contenu de r3
                                                            )
  391 000001BA         
  392 000001BA 3901    wait2   subs             r1, #1      ;; temps allumé
  393 000001BC D1FD            bne              wait2
  394 000001BE         
  395 000001BE 603A            str              r2, [r7]    ;; Eteint LED car r
                                                            2 = 0x00
  396 000001C0 F8CC 2000       str              r2, [r12]
  397 000001C4 492C            ldr              r1, = DUREE ;; pour la duree de
                                                             la boucle d'attent
                                                            e1 (wait1)
  398 000001C6         
  399 000001C6 3901    wait10  subs             r1, #1      ;; temps éteint
  400 000001C8 D1FD            bne              wait10
  401 000001CA         
  402 000001CA E7E8            b                blinkDist   ;; boucle
  403 000001CC         fin
  404 000001CC 4770            bx               lr          ;; retourne sur le 
                                                            code principal
  405 000001CE         
  406 000001CE         Reset_Handlerone
  407 000001CE         ; Pour le Stellaris LM3S8992, cela pourrait être, par ex
                       emple, 0x40030000
  408 000001CE         ; Activation de l'horloge pour le GPTM (General Purpose 



ARM Macro Assembler    Page 12 


                       Timer Module)
  409 000001CE         
  410 000001CE         
  411 000001CE         
  412 000001CE         ; Activation de l'horloge pour le TIMER0 en mode normal
  413 000001CE F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  414 000001D2 4A2A            LDR              R2, =0x400FE104 ; Adresse du re
                                                            gistre RCGC1
  415 000001D4 6011            STR              R1, [R2]    ; Écrire dans RCGC1
                                                             pour activer l'hor
                                                            loge de TIMER0
  416 000001D6         
  417 000001D6         ; Activation de l'horloge pour le TIMER0 en mode sommeil
                       
  418 000001D6 F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  419 000001DA 4A29            LDR              R2, =0x400FE114 ; Adresse du re
                                                            gistre SCGC1
  420 000001DC 6011            STR              R1, [R2]    ; Écrire dans SCGC1
                                                             pour activer l'hor
                                                            loge de TIMER0
  421 000001DE         
  422 000001DE         ; Activation de l'horloge pour le TIMER0 en mode sommeil
                        profond
  423 000001DE F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  424 000001E2 4A28            LDR              R2, =0x400FE124 ; Adresse du re
                                                            gistre DCGC1
  425 000001E4 6011            STR              R1, [R2]    ; Écrire dans DCGC1
                                                             pour activer l'hor
                                                            loge de TIMER0
  426 000001E6         
  427 000001E6         ; Réinitialisation logicielle de TIMER0 si nécessaire
  428 000001E6 F04F 0101       LDR              R1, =0x01   ; Bit correspondant
                                                             à TIMER0
  429 000001EA 4A27            LDR              R2, =0x400FE044 ; Adresse du re
                                                            gistre SRCR1
  430 000001EC 6011            STR              R1, [R2]    ; Réinitialisation 
                                                            logicielle de TIMER
                                                            0
  431 000001EE BF00            NOP                          ; Insérer un délai 
                                                            si nécessaire
  432 000001F0 F04F 0100       LDR              R1, =0x0    ; Valeur pour effac
                                                            er le bit de réinit
                                                            ialisation
  433 000001F4 6011            STR              R1, [R2]    ; Effacer la réinit
                                                            ialisation logiciel
                                                            le de TIMER0
  434 000001F6         
  435 000001F6         
  436 000001F6         
  437 000001F6         ; Configuration du mode du timer
  438 000001F6 4825            LDR              R0, =0x40030000 ; Pas nécessair
                                                            e, R0 est déjà char
                                                            gé avec cette valeu
                                                            r
  439 000001F8 F04F 0104       LDR              R1, =0x4    ; R1 = 1 (pour le m
                                                            ode RTC)



ARM Macro Assembler    Page 13 


  440 000001FC 6001            STR              R1, [R0, #0x000] ; Écrit 1 dans
                                                             GPTMCFG pour confi
                                                            gurer le mode RTC
  441 000001FE         
  442 000001FE         ; Activation du timer
  443 000001FE 4823            LDR              R0, =0x40030000 ; Pas nécessair
                                                            e, R0 est déjà char
                                                            gé avec cette valeu
                                                            r
  444 00000200 F04F 0101       LDR              R1, =0x1    ; R1 = 1 (pour acti
                                                            ver le timer)
  445 00000204 60C1            STR              R1, [R0, #0x00C] ; Écrit 1 dans
                                                             GPTMCTL pour activ
                                                            er le timer
  446 00000206         
  447 00000206         ; Fin du gestionnaire de réinitialisation, retourne au p
                       rogramme principal
  448 00000206 4770            BX               LR
  449 00000208         
  450 00000208                 END
              400FE100 
              400FE108 
              4000752C 
              4002752C 
              40007420 
              40027420 
              40028040 
              40028060 
              40028064 
              40028050 
              40028058 
              4002805C 
              40028080 
              400280A0 
              400280A4 
              40028090 
              40028098 
              4002809C 
              40007400 
              40007500 
              4000751C 
              4000709C 
              40027400 
              40027500 
              4002751C 
              40027008 
              40028008 
              40007008 
              002FFFFF 
              400FE104 
              400FE114 
              400FE124 
              400FE044 
              40030000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\rk_config_moteur.d -o.\objects\rk_config_moteur.o -I.\RT
E\_Target_1 -IC:\Users\polom\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core
\Include -IC:\Users\polom\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\Device\ARM\AR
MCM3\Include --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --pred



ARM Macro Assembler    Page 14 


efine="__UVISION_VERSION SETA 528" --predefine="_RTE_ SETA 1" --predefine="ARMC
M3 SETA 1" --list=.\listings\rk_config_moteur.lst RK_Config_Moteur.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 86 in file RK_Config_Moteur.s
   Uses
      None
Comment: .text unused
DISTANCE 00000174

Symbol: DISTANCE
   Definitions
      At line 353 in file RK_Config_Moteur.s
   Uses
      At line 102 in file RK_Config_Moteur.s
Comment: DISTANCE used once
MOTEUR_DROIT_ARRIERE 00000134

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 309 in file RK_Config_Moteur.s
   Uses
      At line 94 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_ARRIERE used once
MOTEUR_DROIT_AVANT 0000013E

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 316 in file RK_Config_Moteur.s
   Uses
      At line 93 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 0000015C

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 337 in file RK_Config_Moteur.s
   Uses
      At line 95 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_INVERSE used once
MOTEUR_DROIT_OFF 00000110

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 288 in file RK_Config_Moteur.s
   Uses
      At line 92 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_OFF used once
MOTEUR_DROIT_ON 00000104

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 280 in file RK_Config_Moteur.s
   Uses
      At line 91 in file RK_Config_Moteur.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000148

Symbol: MOTEUR_GAUCHE_ARRIERE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 323 in file RK_Config_Moteur.s
   Uses
      At line 99 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_ARRIERE used once
MOTEUR_GAUCHE_AVANT 00000152

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 330 in file RK_Config_Moteur.s
   Uses
      At line 98 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000168

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 345 in file RK_Config_Moteur.s
   Uses
      At line 100 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_INVERSE used once
MOTEUR_GAUCHE_OFF 00000128

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 302 in file RK_Config_Moteur.s
   Uses
      At line 97 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_OFF used once
MOTEUR_GAUCHE_ON 0000011C

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 295 in file RK_Config_Moteur.s
   Uses
      At line 96 in file RK_Config_Moteur.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 106 in file RK_Config_Moteur.s
   Uses
      At line 90 in file RK_Config_Moteur.s
Comment: MOTEUR_INIT used once
Reset_Handlerone 000001CE

Symbol: Reset_Handlerone
   Definitions
      At line 406 in file RK_Config_Moteur.s
   Uses
      At line 101 in file RK_Config_Moteur.s
Comment: Reset_Handlerone used once
blinkDist 0000019E

Symbol: blinkDist
   Definitions
      At line 375 in file RK_Config_Moteur.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 402 in file RK_Config_Moteur.s
Comment: blinkDist used once
dizaine 0000018C

Symbol: dizaine
   Definitions
      At line 365 in file RK_Config_Moteur.s
   Uses
      At line 370 in file RK_Config_Moteur.s
Comment: dizaine used once
fin 000001CC

Symbol: fin
   Definitions
      At line 403 in file RK_Config_Moteur.s
   Uses
      At line 387 in file RK_Config_Moteur.s
Comment: fin used once
finDizaine 0000019C

Symbol: finDizaine
   Definitions
      At line 372 in file RK_Config_Moteur.s
   Uses
      At line 367 in file RK_Config_Moteur.s
Comment: finDizaine used once
led2 000001AE

Symbol: led2
   Definitions
      At line 385 in file RK_Config_Moteur.s
   Uses
      At line 379 in file RK_Config_Moteur.s
Comment: led2 used once
wait10 000001C6

Symbol: wait10
   Definitions
      At line 399 in file RK_Config_Moteur.s
   Uses
      At line 400 in file RK_Config_Moteur.s
Comment: wait10 used once
wait2 000001BA

Symbol: wait2
   Definitions
      At line 392 in file RK_Config_Moteur.s
   Uses
      At line 383 in file RK_Config_Moteur.s
      At line 393 in file RK_Config_Moteur.s

21 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BROCHE4_5 00000030

Symbol: BROCHE4_5
   Definitions
      At line 77 in file RK_Config_Moteur.s
   Uses
      At line 381 in file RK_Config_Moteur.s
      At line 389 in file RK_Config_Moteur.s

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 84 in file RK_Config_Moteur.s
   Uses
      At line 376 in file RK_Config_Moteur.s
      At line 397 in file RK_Config_Moteur.s

GPIOAFSEL_D 40007420

Symbol: GPIOAFSEL_D
   Definitions
      At line 31 in file RK_Config_Moteur.s
   Uses
      At line 148 in file RK_Config_Moteur.s
Comment: GPIOAFSEL_D used once
GPIOAFSEL_H 40027420

Symbol: GPIOAFSEL_H
   Definitions
      At line 39 in file RK_Config_Moteur.s
   Uses
      At line 155 in file RK_Config_Moteur.s
Comment: GPIOAFSEL_H used once
GPIODATA_D 40007000

Symbol: GPIODATA_D
   Definitions
      At line 26 in file RK_Config_Moteur.s
   Uses
      At line 254 in file RK_Config_Moteur.s
      At line 311 in file RK_Config_Moteur.s
      At line 318 in file RK_Config_Moteur.s
      At line 339 in file RK_Config_Moteur.s

GPIODATA_H 40027000

Symbol: GPIODATA_H
   Definitions
      At line 34 in file RK_Config_Moteur.s
   Uses
      At line 271 in file RK_Config_Moteur.s
      At line 325 in file RK_Config_Moteur.s
      At line 332 in file RK_Config_Moteur.s
      At line 347 in file RK_Config_Moteur.s

GPIODEN_D 4000751C

Symbol: GPIODEN_D



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 29 in file RK_Config_Moteur.s
   Uses
      At line 249 in file RK_Config_Moteur.s
Comment: GPIODEN_D used once
GPIODEN_H 4002751C

Symbol: GPIODEN_H
   Definitions
      At line 37 in file RK_Config_Moteur.s
   Uses
      At line 267 in file RK_Config_Moteur.s
Comment: GPIODEN_H used once
GPIODIR_D 40007400

Symbol: GPIODIR_D
   Definitions
      At line 27 in file RK_Config_Moteur.s
   Uses
      At line 239 in file RK_Config_Moteur.s
Comment: GPIODIR_D used once
GPIODIR_H 40027400

Symbol: GPIODIR_H
   Definitions
      At line 35 in file RK_Config_Moteur.s
   Uses
      At line 259 in file RK_Config_Moteur.s
Comment: GPIODIR_H used once
GPIODR2R_D 40007500

Symbol: GPIODR2R_D
   Definitions
      At line 28 in file RK_Config_Moteur.s
   Uses
      At line 244 in file RK_Config_Moteur.s
Comment: GPIODR2R_D used once
GPIODR2R_H 40027500

Symbol: GPIODR2R_H
   Definitions
      At line 36 in file RK_Config_Moteur.s
   Uses
      At line 263 in file RK_Config_Moteur.s
Comment: GPIODR2R_H used once
GPIOPCTL_D 4000752C

Symbol: GPIOPCTL_D
   Definitions
      At line 30 in file RK_Config_Moteur.s
   Uses
      At line 134 in file RK_Config_Moteur.s
Comment: GPIOPCTL_D used once
GPIOPCTL_H 4002752C

Symbol: GPIOPCTL_H
   Definitions
      At line 38 in file RK_Config_Moteur.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 142 in file RK_Config_Moteur.s
Comment: GPIOPCTL_H used once
GPIO_0 00000001

Symbol: GPIO_0
   Definitions
      At line 15 in file RK_Config_Moteur.s
   Uses
      At line 241 in file RK_Config_Moteur.s
      At line 246 in file RK_Config_Moteur.s
      At line 251 in file RK_Config_Moteur.s
      At line 254 in file RK_Config_Moteur.s

GPIO_1 00000002

Symbol: GPIO_1
   Definitions
      At line 16 in file RK_Config_Moteur.s
   Uses
      At line 241 in file RK_Config_Moteur.s
      At line 246 in file RK_Config_Moteur.s
      At line 251 in file RK_Config_Moteur.s
      At line 254 in file RK_Config_Moteur.s
      At line 271 in file RK_Config_Moteur.s
      At line 311 in file RK_Config_Moteur.s
      At line 318 in file RK_Config_Moteur.s
      At line 325 in file RK_Config_Moteur.s
      At line 332 in file RK_Config_Moteur.s
      At line 339 in file RK_Config_Moteur.s
      At line 341 in file RK_Config_Moteur.s
      At line 347 in file RK_Config_Moteur.s
      At line 349 in file RK_Config_Moteur.s

GPIO_2 00000004

Symbol: GPIO_2
   Definitions
      At line 17 in file RK_Config_Moteur.s
   Uses
      At line 241 in file RK_Config_Moteur.s
      At line 246 in file RK_Config_Moteur.s
      At line 251 in file RK_Config_Moteur.s
      At line 254 in file RK_Config_Moteur.s
      At line 255 in file RK_Config_Moteur.s

GPIO_5 00000020

Symbol: GPIO_5
   Definitions
      At line 18 in file RK_Config_Moteur.s
   Uses
      At line 241 in file RK_Config_Moteur.s
      At line 246 in file RK_Config_Moteur.s
      At line 251 in file RK_Config_Moteur.s
      At line 254 in file RK_Config_Moteur.s
      At line 255 in file RK_Config_Moteur.s

GPTMCFG 40030000




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Symbol: GPTMCFG
   Definitions
      At line 74 in file RK_Config_Moteur.s
   Uses
      None
Comment: GPTMCFG unused
GPTMCTL 4003000C

Symbol: GPTMCTL
   Definitions
      At line 73 in file RK_Config_Moteur.s
   Uses
      None
Comment: GPTMCTL unused
GPTMTAMATCHR 40030030

Symbol: GPTMTAMATCHR
   Definitions
      At line 75 in file RK_Config_Moteur.s
   Uses
      None
Comment: GPTMTAMATCHR unused
PORTD_BASE 40007000

Symbol: PORTD_BASE
   Definitions
      At line 25 in file RK_Config_Moteur.s
   Uses
      At line 26 in file RK_Config_Moteur.s
      At line 27 in file RK_Config_Moteur.s
      At line 28 in file RK_Config_Moteur.s
      At line 29 in file RK_Config_Moteur.s
      At line 30 in file RK_Config_Moteur.s
      At line 31 in file RK_Config_Moteur.s

PORTH_BASE 40027000

Symbol: PORTH_BASE
   Definitions
      At line 33 in file RK_Config_Moteur.s
   Uses
      At line 34 in file RK_Config_Moteur.s
      At line 35 in file RK_Config_Moteur.s
      At line 36 in file RK_Config_Moteur.s
      At line 37 in file RK_Config_Moteur.s
      At line 38 in file RK_Config_Moteur.s
      At line 39 in file RK_Config_Moteur.s

PWM0CMPA 40028058

Symbol: PWM0CMPA
   Definitions
      At line 48 in file RK_Config_Moteur.s
   Uses
      At line 183 in file RK_Config_Moteur.s
Comment: PWM0CMPA used once
PWM0CMPB 4002805C

Symbol: PWM0CMPB



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 49 in file RK_Config_Moteur.s
   Uses
      At line 187 in file RK_Config_Moteur.s
Comment: PWM0CMPB used once
PWM0CTL 40028040

Symbol: PWM0CTL
   Definitions
      At line 46 in file RK_Config_Moteur.s
   Uses
      At line 163 in file RK_Config_Moteur.s
      At line 192 in file RK_Config_Moteur.s

PWM0GENA 40028060

Symbol: PWM0GENA
   Definitions
      At line 50 in file RK_Config_Moteur.s
   Uses
      At line 167 in file RK_Config_Moteur.s
Comment: PWM0GENA used once
PWM0GENB 40028064

Symbol: PWM0GENB
   Definitions
      At line 51 in file RK_Config_Moteur.s
   Uses
      At line 172 in file RK_Config_Moteur.s
Comment: PWM0GENB used once
PWM0LOAD 40028050

Symbol: PWM0LOAD
   Definitions
      At line 47 in file RK_Config_Moteur.s
   Uses
      At line 179 in file RK_Config_Moteur.s
Comment: PWM0LOAD used once
PWM1CMPA 40028098

Symbol: PWM1CMPA
   Definitions
      At line 56 in file RK_Config_Moteur.s
   Uses
      At line 222 in file RK_Config_Moteur.s
Comment: PWM1CMPA used once
PWM1CMPB 4002809C

Symbol: PWM1CMPB
   Definitions
      At line 57 in file RK_Config_Moteur.s
   Uses
      At line 226 in file RK_Config_Moteur.s
Comment: PWM1CMPB used once
PWM1CTL 40028080

Symbol: PWM1CTL
   Definitions
      At line 54 in file RK_Config_Moteur.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 200 in file RK_Config_Moteur.s
      At line 231 in file RK_Config_Moteur.s

PWM1GENA 400280A0

Symbol: PWM1GENA
   Definitions
      At line 58 in file RK_Config_Moteur.s
   Uses
      At line 204 in file RK_Config_Moteur.s
Comment: PWM1GENA used once
PWM1GENB 400280A4

Symbol: PWM1GENB
   Definitions
      At line 59 in file RK_Config_Moteur.s
   Uses
      At line 210 in file RK_Config_Moteur.s
Comment: PWM1GENB used once
PWM1LOAD 40028090

Symbol: PWM1LOAD
   Definitions
      At line 55 in file RK_Config_Moteur.s
   Uses
      At line 218 in file RK_Config_Moteur.s
Comment: PWM1LOAD used once
PWMENABLE 40028008

Symbol: PWMENABLE
   Definitions
      At line 43 in file RK_Config_Moteur.s
   Uses
      At line 282 in file RK_Config_Moteur.s
      At line 289 in file RK_Config_Moteur.s
      At line 296 in file RK_Config_Moteur.s
      At line 303 in file RK_Config_Moteur.s

PWM_BASE 40028000

Symbol: PWM_BASE
   Definitions
      At line 42 in file RK_Config_Moteur.s
   Uses
      At line 43 in file RK_Config_Moteur.s
      At line 46 in file RK_Config_Moteur.s
      At line 47 in file RK_Config_Moteur.s
      At line 48 in file RK_Config_Moteur.s
      At line 49 in file RK_Config_Moteur.s
      At line 50 in file RK_Config_Moteur.s
      At line 51 in file RK_Config_Moteur.s
      At line 54 in file RK_Config_Moteur.s
      At line 55 in file RK_Config_Moteur.s
      At line 56 in file RK_Config_Moteur.s
      At line 57 in file RK_Config_Moteur.s
      At line 58 in file RK_Config_Moteur.s
      At line 59 in file RK_Config_Moteur.s




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

RCC 400FE060

Symbol: RCC
   Definitions
      At line 62 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC unused
RCC2 400FE070

Symbol: RCC2
   Definitions
      At line 63 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC2 unused
RCC2_DIV400 40000000

Symbol: RCC2_DIV400
   Definitions
      At line 69 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC2_DIV400 unused
RCC_OSCSRC 00000030

Symbol: RCC_OSCSRC
   Definitions
      At line 66 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_OSCSRC unused
RCC_OSCSRC_MAIN 00000000

Symbol: RCC_OSCSRC_MAIN
   Definitions
      At line 67 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_OSCSRC_MAIN unused
RCC_PWRDN 00002000

Symbol: RCC_PWRDN
   Definitions
      At line 68 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_PWRDN unused
RCC_SYSDIV 07800000

Symbol: RCC_SYSDIV
   Definitions
      At line 70 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_SYSDIV unused
RCC_SYSDIV2 1F800000

Symbol: RCC_SYSDIV2



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 71 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_SYSDIV2 unused
RCC_XTAL 000007C0

Symbol: RCC_XTAL
   Definitions
      At line 64 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_XTAL unused
RCC_XTAL_16MHZ 00000540

Symbol: RCC_XTAL_16MHZ
   Definitions
      At line 65 in file RK_Config_Moteur.s
   Uses
      None
Comment: RCC_XTAL_16MHZ unused
SYSCTL_RCGC0 400FE100

Symbol: SYSCTL_RCGC0
   Definitions
      At line 21 in file RK_Config_Moteur.s
   Uses
      At line 107 in file RK_Config_Moteur.s
Comment: SYSCTL_RCGC0 used once
SYSCTL_RCGC2 400FE108

Symbol: SYSCTL_RCGC2
   Definitions
      At line 22 in file RK_Config_Moteur.s
   Uses
      At line 117 in file RK_Config_Moteur.s
      At line 123 in file RK_Config_Moteur.s

VITESSE 000001A2

Symbol: VITESSE
   Definitions
      At line 81 in file RK_Config_Moteur.s
   Uses
      At line 184 in file RK_Config_Moteur.s
      At line 223 in file RK_Config_Moteur.s

50 symbols
408 symbols in table
